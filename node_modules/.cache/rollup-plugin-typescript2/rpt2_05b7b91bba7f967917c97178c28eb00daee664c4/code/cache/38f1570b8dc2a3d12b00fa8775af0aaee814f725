{"code":"import { useCallback } from 'react';\r\nimport { useAppContext } from 'src/hooks';\r\nimport SGroupTool from 'src/script/editor/tool/sgroup';\r\nconst useBondSGroupAttach = () => {\r\n    const { getKetcherInstance } = useAppContext();\r\n    const handler = useCallback(({ props }) => {\r\n        const editor = getKetcherInstance().editor;\r\n        const struct = editor.render.ctab;\r\n        const bondId = props.bondIds[0];\r\n        const bond = struct.bonds.get(bondId);\r\n        const selection = {\r\n            atoms: [bond?.b.begin, bond?.b.end],\r\n            bonds: [bondId]\r\n        };\r\n        editor.selection(selection);\r\n        SGroupTool.sgroupDialog(editor, null);\r\n    }, [getKetcherInstance]);\r\n    const hidden = useCallback(({ props }) => {\r\n        const editor = getKetcherInstance().editor;\r\n        const struct = editor.render.ctab;\r\n        const bondIds = props.bondIds;\r\n        if (bondIds.length > 1) {\r\n            return true;\r\n        }\r\n        const bond = struct.bonds.get(bondIds[0]);\r\n        const attachedSGroups = bond.b.getAttachedSGroups(struct.molecule);\r\n        return attachedSGroups.size > 0;\r\n    }, [getKetcherInstance]);\r\n    return [handler, hidden];\r\n};\r\nexport default useBondSGroupAttach;\r\n//# sourceMappingURL=useBondSGroupAttach.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/dist/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/node_modules/@types/react/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/hooks/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/editor/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/editor/tool/sgroup.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/components/ContextMenu/contextMenu.types.ts"],"map":"{\"version\":3,\"file\":\"useBondSGroupAttach.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../../src/script/ui/views/components/ContextMenu/hooks/useBondSGroupAttach.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,OAAO,CAAA;AACnC,OAAO,EAAE,aAAa,EAAE,MAAM,WAAW,CAAA;AAEzC,OAAO,UAAU,MAAM,+BAA+B,CAAA;AAGtD,MAAM,mBAAmB,GAAG,GAAG,EAAE;IAC/B,MAAM,EAAE,kBAAkB,EAAE,GAAG,aAAa,EAAE,CAAA;IAE9C,MAAM,OAAO,GAAG,WAAW,CACzB,CAAC,EAAE,KAAK,EAAmB,EAAE,EAAE;QAC7B,MAAM,MAAM,GAAG,kBAAkB,EAAE,CAAC,MAAgB,CAAA;QACpD,MAAM,MAAM,GAAa,MAAM,CAAC,MAAM,CAAC,IAAI,CAAA;QAC3C,MAAM,MAAM,GAAG,KAAM,CAAC,OAAQ,CAAC,CAAC,CAAC,CAAA;QACjC,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAE,CAAA;QAEtC,MAAM,SAAS,GAAG;YAChB,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC;YACnC,KAAK,EAAE,CAAC,MAAM,CAAC;SAChB,CAAA;QAED,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAA;QAC3B,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;IACvC,CAAC,EACD,CAAC,kBAAkB,CAAC,CACrB,CAAA;IAED,MAAM,MAAM,GAAG,WAAW,CACxB,CAAC,EAAE,KAAK,EAAmB,EAAE,EAAE;QAC7B,MAAM,MAAM,GAAG,kBAAkB,EAAE,CAAC,MAAgB,CAAA;QACpD,MAAM,MAAM,GAAa,MAAM,CAAC,MAAM,CAAC,IAAI,CAAA;QAC3C,MAAM,OAAO,GAAG,KAAM,CAAC,OAAQ,CAAA;QAE/B,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YACtB,OAAO,IAAI,CAAA;SACZ;QAED,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAE,CAAA;QAC1C,MAAM,eAAe,GAAG,IAAI,CAAC,CAAC,CAAC,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;QAElE,OAAO,eAAe,CAAC,IAAI,GAAG,CAAC,CAAA;IACjC,CAAC,EACD,CAAC,kBAAkB,CAAC,CACrB,CAAA;IAED,OAAO,CAAC,OAAO,EAAE,MAAM,CAAU,CAAA;AACnC,CAAC,CAAA;AAED,eAAe,mBAAmB,CAAA\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/script/ui/views/components/ContextMenu/hooks/useBondSGroupAttach.d.ts","writeByteOrderMark":false,"text":"import { ItemEventParams } from '../contextMenu.types';\r\ndeclare const useBondSGroupAttach: () => readonly [({ props }: ItemEventParams) => void, ({ props }: ItemEventParams) => boolean];\r\nexport default useBondSGroupAttach;\r\n"}}
