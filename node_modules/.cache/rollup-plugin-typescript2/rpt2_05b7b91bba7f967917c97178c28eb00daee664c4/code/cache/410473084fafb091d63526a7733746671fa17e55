{"code":"import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\r\n/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { IconButton } from './IconButton';\r\nimport { ElementWithDropdown } from './ElementWithDropdown';\r\nexport const ClipboardControls = ({ onCopy, onCopyMol, onCopyKet, onCopyImage, onPaste, onCut, shortcuts, disabledButtons, hiddenButtons }) => {\r\n    const copyButtons = [\r\n        {\r\n            name: 'copy',\r\n            title: 'Copy',\r\n            handler: onCopy\r\n        },\r\n        {\r\n            name: 'copy-mol',\r\n            title: 'Copy as MOL',\r\n            handler: onCopyMol\r\n        },\r\n        {\r\n            name: 'copy-ket',\r\n            title: 'Copy as KET',\r\n            handler: onCopyKet\r\n        },\r\n        {\r\n            name: 'copy-image',\r\n            title: 'Copy Image',\r\n            handler: onCopyImage\r\n        }\r\n    ];\r\n    const getButtonElement = (button) => (_jsx(IconButton, { title: button.title, onClick: button.handler, iconName: button.name, shortcut: shortcuts[button.name], disabled: disabledButtons.includes(button.name), isHidden: hiddenButtons.includes(button.name) }, button.name));\r\n    const firstButtonObj = copyButtons.find((button) => !hiddenButtons.includes(button.name));\r\n    const collapsibleElements = copyButtons\r\n        .filter((button) => button !== firstButtonObj)\r\n        .map((button) => getButtonElement(button));\r\n    return (_jsxs(_Fragment, { children: [!hiddenButtons.includes('copies') && (_jsx(ElementWithDropdown, { topElement: getButtonElement(firstButtonObj), dropDownElements: collapsibleElements })), _jsx(IconButton, { title: \"Paste\", onClick: onPaste, iconName: \"paste\", shortcut: shortcuts.paste, disabled: disabledButtons.includes('paste'), isHidden: hiddenButtons.includes('paste') }), _jsx(IconButton, { title: \"Cut\", onClick: onCut, iconName: \"cut\", shortcut: shortcuts.cut, disabled: disabledButtons.includes('cut'), isHidden: hiddenButtons.includes('cut') })] }));\r\n};\r\n//# sourceMappingURL=ClipboardControls.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/toolbars/TopToolbar/IconButton.tsx","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/toolbars/TopToolbar/ElementWithDropdown.tsx"],"map":"{\"version\":3,\"file\":\"ClipboardControls.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../src/script/ui/views/toolbars/TopToolbar/ClipboardControls.tsx\"],\"names\":[],\"mappings\":\";AAAA;;;;;;;;;;;;;;6EAc6E;AAE7E,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAA;AACzC,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAA;AAc3D,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,EAChC,MAAM,EACN,SAAS,EACT,SAAS,EACT,WAAW,EACX,OAAO,EACP,KAAK,EACL,SAAS,EACT,eAAe,EACf,aAAa,EACU,EAAE,EAAE;IAC3B,MAAM,WAAW,GAAG;QAClB;YACE,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,MAAM;YACb,OAAO,EAAE,MAAM;SAChB;QACD;YACE,IAAI,EAAE,UAAU;YAChB,KAAK,EAAE,aAAa;YACpB,OAAO,EAAE,SAAS;SACnB;QACD;YACE,IAAI,EAAE,UAAU;YAChB,KAAK,EAAE,aAAa;YACpB,OAAO,EAAE,SAAS;SACnB;QACD;YACE,IAAI,EAAE,YAAY;YAClB,KAAK,EAAE,YAAY;YACnB,OAAO,EAAE,WAAW;SACrB;KACF,CAAA;IAED,MAAM,gBAAgB,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,CACnC,KAAC,UAAU,IACT,KAAK,EAAE,MAAM,CAAC,KAAK,EACnB,OAAO,EAAE,MAAM,CAAC,OAAO,EACvB,QAAQ,EAAE,MAAM,CAAC,IAAI,EACrB,QAAQ,EAAE,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,EAChC,QAAQ,EAAE,eAAe,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,EAC/C,QAAQ,EAAE,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IACxC,MAAM,CAAC,IAAI,CAChB,CACH,CAAA;IAED,MAAM,cAAc,GAAG,WAAW,CAAC,IAAI,CACrC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CACjD,CAAA;IACD,MAAM,mBAAmB,GAAG,WAAW;SACpC,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,KAAK,cAAc,CAAC;SAC7C,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAA;IAE5C,OAAO,CACL,8BACG,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CACpC,KAAC,mBAAmB,IAClB,UAAU,EAAE,gBAAgB,CAAC,cAAc,CAAC,EAC5C,gBAAgB,EAAE,mBAAmB,GACrC,CACH,EACD,KAAC,UAAU,IACT,KAAK,EAAC,OAAO,EACb,OAAO,EAAE,OAAO,EAChB,QAAQ,EAAC,OAAO,EAChB,QAAQ,EAAE,SAAS,CAAC,KAAK,EACzB,QAAQ,EAAE,eAAe,CAAC,QAAQ,CAAC,OAAO,CAAC,EAC3C,QAAQ,EAAE,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,GACzC,EACF,KAAC,UAAU,IACT,KAAK,EAAC,KAAK,EACX,OAAO,EAAE,KAAK,EACd,QAAQ,EAAC,KAAK,EACd,QAAQ,EAAE,SAAS,CAAC,GAAG,EACvB,QAAQ,EAAE,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,EACzC,QAAQ,EAAE,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,GACvC,IACD,CACJ,CAAA;AACH,CAAC,CAAA\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/script/ui/views/toolbars/TopToolbar/ClipboardControls.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\n/// <reference types=\"react\" />\r\ninterface ClipboardControlsProps {\r\n    onCopy: () => void;\r\n    onCopyMol: () => void;\r\n    onCopyKet: () => void;\r\n    onCopyImage: () => void;\r\n    onPaste: () => void;\r\n    onCut: () => void;\r\n    disabledButtons: string[];\r\n    hiddenButtons: string[];\r\n    shortcuts: {\r\n        [key in string]: string;\r\n    };\r\n}\r\nexport declare const ClipboardControls: ({ onCopy, onCopyMol, onCopyKet, onCopyImage, onPaste, onCut, shortcuts, disabledButtons, hiddenButtons }: ClipboardControlsProps) => JSX.Element;\r\nexport {};\r\n"}}
