{"code":"import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\r\n/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { useMemo } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport parentStyles from './OpenOptions.module.less';\r\nimport styles from './FileDrop.module.less';\r\nimport Icon from 'src/script/ui/component/view/icon';\r\nconst FileDrop = ({ buttonLabel, textLabel, iconName, disabled, disabledText, ...rest }) => {\r\n    const { getRootProps, getInputProps, isDragActive, open } = useDropzone({\r\n        multiple: false,\r\n        disabled,\r\n        ...rest\r\n    });\r\n    const getClassesString = useMemo(() => {\r\n        const classes = [\r\n            parentStyles.dropContainer,\r\n            isDragActive ? styles.isHovered : null,\r\n            disabled ? styles.isDisabled : null\r\n        ];\r\n        return classes.join(' ');\r\n    }, [isDragActive]);\r\n    return (_jsxs(\"div\", { onKeyDown: open, ...getRootProps({\r\n            className: getClassesString\r\n        }), children: [_jsx(\"input\", { ...getInputProps() }), _jsx(\"div\", { className: parentStyles.dropIconWrapper, children: _jsx(Icon, { name: iconName }) }), disabled ? (_jsx(\"p\", { className: parentStyles.textLabel, children: disabledText })) : (_jsxs(_Fragment, { children: [_jsx(\"div\", { className: parentStyles.textLabelWrapper, children: _jsx(\"p\", { className: parentStyles.textLabel, children: textLabel }) }), _jsx(\"div\", { className: parentStyles.buttonLabelWrapper, children: _jsx(\"p\", { className: parentStyles.buttonLabel, children: buttonLabel }) })] }))] }));\r\n};\r\nexport { FileDrop };\r\n//# sourceMappingURL=FileDrop.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/node_modules/@types/react/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/node_modules/react-dropzone/typings/react-dropzone.d.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/component/view/icon.jsx"],"map":"{\"version\":3,\"file\":\"FileDrop.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../../../../src/script/ui/views/modal/components/document/Open/components/FileDrop.tsx\"],\"names\":[],\"mappings\":\";AAAA;;;;;;;;;;;;;;6EAc6E;AAE7E,OAAO,EAAE,OAAO,EAAE,MAAM,OAAO,CAAA;AAC/B,OAAO,EAAE,WAAW,EAAmB,MAAM,gBAAgB,CAAA;AAE7D,OAAO,YAAY,MAAM,2BAA2B,CAAA;AACpD,OAAO,MAAM,MAAM,wBAAwB,CAAA;AAC3C,OAAO,IAAI,MAAM,mCAAmC,CAAA;AAUpD,MAAM,QAAQ,GAAG,CAAC,EAChB,WAAW,EACX,SAAS,EACT,QAAQ,EACR,QAAQ,EACR,YAAY,EACZ,GAAG,IAAI,EACO,EAAE,EAAE;IAClB,MAAM,EAAE,YAAY,EAAE,aAAa,EAAE,YAAY,EAAE,IAAI,EAAE,GAAG,WAAW,CAAC;QACtE,QAAQ,EAAE,KAAK;QACf,QAAQ;QACR,GAAG,IAAI;KACR,CAAC,CAAA;IAEF,MAAM,gBAAgB,GAAG,OAAO,CAAC,GAAW,EAAE;QAC5C,MAAM,OAAO,GAAG;YACd,YAAY,CAAC,aAAa;YAC1B,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI;YACtC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI;SACpC,CAAA;QACD,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;IAC1B,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAA;IAElB,OAAO,CACL,eACE,SAAS,EAAE,IAAI,KACX,YAAY,CAAC;YACf,SAAS,EAAE,gBAAgB;SAC5B,CAAC,aAEF,mBAAW,aAAa,EAAE,GAAI,EAC9B,cAAK,SAAS,EAAE,YAAY,CAAC,eAAe,YAC1C,KAAC,IAAI,IAAC,IAAI,EAAE,QAAQ,GAAI,GACpB,EACL,QAAQ,CAAC,CAAC,CAAC,CACV,YAAG,SAAS,EAAE,YAAY,CAAC,SAAS,YAAG,YAAY,GAAK,CACzD,CAAC,CAAC,CAAC,CACF,8BACE,cAAK,SAAS,EAAE,YAAY,CAAC,gBAAgB,YAC3C,YAAG,SAAS,EAAE,YAAY,CAAC,SAAS,YAAG,SAAS,GAAK,GACjD,EACN,cAAK,SAAS,EAAE,YAAY,CAAC,kBAAkB,YAC7C,YAAG,SAAS,EAAE,YAAY,CAAC,WAAW,YAAG,WAAW,GAAK,GACrD,IACL,CACJ,IACG,CACP,CAAA;AACH,CAAC,CAAA;AAED,OAAO,EAAE,QAAQ,EAAE,CAAA\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/script/ui/views/modal/components/document/Open/components/FileDrop.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\n/// <reference types=\"react\" />\r\nimport { DropzoneOptions } from 'react-dropzone';\r\ndeclare type FileDropProps = {\r\n    buttonLabel: string;\r\n    textLabel: string;\r\n    iconName: string;\r\n    disabled?: boolean;\r\n    disabledText?: string;\r\n} & DropzoneOptions;\r\ndeclare const FileDrop: ({ buttonLabel, textLabel, iconName, disabled, disabledText, ...rest }: FileDropProps) => JSX.Element;\r\nexport { FileDrop };\r\n"}}
