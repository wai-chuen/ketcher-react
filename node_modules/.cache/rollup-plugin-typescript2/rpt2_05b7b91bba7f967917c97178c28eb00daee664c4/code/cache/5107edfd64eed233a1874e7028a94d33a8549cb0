{"code":"import { Action, setExpandSGroup } from 'ketcher-core';\r\nimport { useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useAppContext } from 'src/hooks';\r\nimport { highlightFG } from 'src/script/ui/state/functionalGroups';\r\n/**\r\n * Fullname: useFunctionalGroupExpandOrContract\r\n */\r\nconst useFunctionalGroupEoc = () => {\r\n    const { getKetcherInstance } = useAppContext();\r\n    const dispatch = useDispatch();\r\n    const handler = useCallback(({ props }, toExpand) => {\r\n        const editor = getKetcherInstance().editor;\r\n        const molecule = editor.render.ctab;\r\n        const selectedFunctionalGroups = props?.functionalGroups;\r\n        const action = new Action();\r\n        selectedFunctionalGroups?.forEach((functionalGroup) => {\r\n            action.mergeWith(setExpandSGroup(molecule, functionalGroup.relatedSGroupId, {\r\n                expanded: toExpand\r\n            }));\r\n        });\r\n        editor.update(action);\r\n        highlightFG(dispatch, { group: null, id: null });\r\n    }, [dispatch, getKetcherInstance]);\r\n    const hidden = useCallback(({ props }, toExpand) => {\r\n        return Boolean(props?.functionalGroups?.every((functionalGroup) => toExpand ? functionalGroup.isExpanded : !functionalGroup.isExpanded));\r\n    }, []);\r\n    return [handler, hidden];\r\n};\r\nexport default useFunctionalGroupEoc;\r\n//# sourceMappingURL=useFunctionalGroupEoc.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/dist/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/node_modules/@types/react/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/node_modules/@types/react-redux/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/hooks/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/editor/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/state/functionalGroups/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/components/ContextMenu/contextMenu.types.ts"],"map":"{\"version\":3,\"file\":\"useFunctionalGroupEoc.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../../src/script/ui/views/components/ContextMenu/hooks/useFunctionalGroupEoc.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,MAAM,EAAE,eAAe,EAAE,MAAM,cAAc,CAAA;AACtD,OAAO,EAAE,WAAW,EAAE,MAAM,OAAO,CAAA;AACnC,OAAO,EAAE,WAAW,EAAE,MAAM,aAAa,CAAA;AACzC,OAAO,EAAE,aAAa,EAAE,MAAM,WAAW,CAAA;AAEzC,OAAO,EAAE,WAAW,EAAE,MAAM,sCAAsC,CAAA;AAGlE;;GAEG;AACH,MAAM,qBAAqB,GAAG,GAAG,EAAE;IACjC,MAAM,EAAE,kBAAkB,EAAE,GAAG,aAAa,EAAE,CAAA;IAC9C,MAAM,QAAQ,GAAG,WAAW,EAAE,CAAA;IAE9B,MAAM,OAAO,GAAG,WAAW,CACzB,CAAC,EAAE,KAAK,EAAmB,EAAE,QAAiB,EAAE,EAAE;QAChD,MAAM,MAAM,GAAG,kBAAkB,EAAE,CAAC,MAAgB,CAAA;QACpD,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAA;QACnC,MAAM,wBAAwB,GAAG,KAAK,EAAE,gBAAgB,CAAA;QACxD,MAAM,MAAM,GAAG,IAAI,MAAM,EAAE,CAAA;QAE3B,wBAAwB,EAAE,OAAO,CAAC,CAAC,eAAe,EAAE,EAAE;YACpD,MAAM,CAAC,SAAS,CACd,eAAe,CAAC,QAAQ,EAAE,eAAe,CAAC,eAAe,EAAE;gBACzD,QAAQ,EAAE,QAAQ;aACnB,CAAC,CACH,CAAA;QACH,CAAC,CAAC,CAAA;QAEF,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;QACrB,WAAW,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,CAAA;IAClD,CAAC,EACD,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAC/B,CAAA;IAED,MAAM,MAAM,GAAG,WAAW,CACxB,CAAC,EAAE,KAAK,EAAmB,EAAE,QAAiB,EAAE,EAAE;QAChD,OAAO,OAAO,CACZ,KAAK,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC,eAAe,EAAE,EAAE,CACjD,QAAQ,CAAC,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,UAAU,CACpE,CACF,CAAA;IACH,CAAC,EACD,EAAE,CACH,CAAA;IAED,OAAO,CAAC,OAAO,EAAE,MAAM,CAAU,CAAA;AACnC,CAAC,CAAA;AAED,eAAe,qBAAqB,CAAA\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/script/ui/views/components/ContextMenu/hooks/useFunctionalGroupEoc.d.ts","writeByteOrderMark":false,"text":"import { ItemEventParams } from '../contextMenu.types';\r\n/**\r\n * Fullname: useFunctionalGroupExpandOrContract\r\n */\r\ndeclare const useFunctionalGroupEoc: () => readonly [({ props }: ItemEventParams, toExpand: boolean) => void, ({ props }: ItemEventParams, toExpand: boolean) => boolean];\r\nexport default useFunctionalGroupEoc;\r\n"}}
