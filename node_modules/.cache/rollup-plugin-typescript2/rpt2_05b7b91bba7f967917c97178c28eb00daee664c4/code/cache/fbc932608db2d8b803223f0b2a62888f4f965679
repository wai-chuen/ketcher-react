{"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\r\n/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport Icon from '../../../../../component/view/icon';\r\nimport clsx from 'clsx';\r\nimport styles from './TextButton.module.less';\r\nexport const TextButton = (props) => {\r\n    const toggleStyle = (event, command) => {\r\n        event.preventDefault();\r\n        props.toggleStyle(command);\r\n    };\r\n    return (_jsx(\"button\", { className: clsx(styles.textButton, { [styles.isActive]: props.active }), title: props.button.command.toLowerCase(), onMouseDown: (event) => {\r\n            toggleStyle(event, props.button.command);\r\n        }, children: _jsx(Icon, { name: props.button.name }) }));\r\n};\r\n//# sourceMappingURL=TextButton.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/component/view/icon.jsx","/usr/local/google/home/waich/workspace/ketcher/node_modules/@types/react/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/dist/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/node_modules/clsx/clsx.d.ts"],"map":"{\"version\":3,\"file\":\"TextButton.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../../../src/script/ui/views/modal/components/Text/TextButton/TextButton.tsx\"],\"names\":[],\"mappings\":\";AAAA;;;;;;;;;;;;;;6EAc6E;AAE7E,OAAO,IAAI,MAAM,oCAAoC,CAAA;AAGrD,OAAO,IAAI,MAAM,MAAM,CAAA;AACvB,OAAO,MAAM,MAAM,0BAA0B,CAAA;AAa7C,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,KAAY,EAAE,EAAE;IACzC,MAAM,WAAW,GAAG,CAClB,KAAsD,EACtD,OAAoB,EACpB,EAAE;QACF,KAAK,CAAC,cAAc,EAAE,CAAA;QACtB,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAA;IAC5B,CAAC,CAAA;IAED,OAAO,CACL,iBACE,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,EACvE,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,EACzC,WAAW,EAAE,CAAC,KAAK,EAAE,EAAE;YACrB,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;QAC1C,CAAC,YAED,KAAC,IAAI,IAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,IAAI,GAAI,GAC1B,CACV,CAAA;AACH,CAAC,CAAA\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/script/ui/views/modal/components/Text/TextButton/TextButton.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\n/// <reference types=\"react\" />\r\nimport { TextCommand } from 'ketcher-core';\r\ninterface TextButtonProps {\r\n    button: {\r\n        command: TextCommand;\r\n        name: string;\r\n    };\r\n    active: boolean;\r\n}\r\ninterface TextButtonPropsCallProps {\r\n    toggleStyle: (command: TextCommand) => void;\r\n}\r\ndeclare type Props = TextButtonProps & TextButtonPropsCallProps;\r\nexport declare const TextButton: (props: Props) => JSX.Element;\r\nexport {};\r\n"}}
