{"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\n/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ClickAwayListener, Collapse, IconButton } from '@mui/material';\r\nimport styled from '@emotion/styled';\r\nimport Icon from 'src/script/ui/component/view/icon';\r\nconst ElementAndDropdown = styled('div') `\n  position: relative;\n`;\r\nconst DropDownContent = styled('div') `\n  display: flex;\n  position: absolute;\n  left: 5px;\n  border-radius: 2px;\n  flex-direction: column;\n  z-index: 20;\n  white-space: nowrap;\n  word-break: keep-all;\n  padding: 2px;\n  background: white; // TODO use variable\n  border: 1px solid #cad3dd; // TODO use variable\n  border-radius: 5px;\n  box-shadow: 0 6px 12px rgb(0 0 0 / 18%);\n`;\r\nconst DropDownButton = styled(IconButton) `\n  position: absolute;\n  padding: 0;\n  right: 0;\n  bottom: 0;\n\n  &.disabled {\n    cursor: not-allowed;\n    opacity: 0.5;\n    background-color: initial;\n    color: #333;\n    pointer-events: auto;\n  }\n`;\r\nconst DropDownArrow = styled(Icon) `\n  display: block;\n  width: 7px;\n  height: 7px;\n  margin: 1px;\n\n  &:hover {\n    fill: #005662;\n    transform: none;\n    box-shadow: none;\n    transition: none;\n    background: none;\n  }\n\n  &svg {\n    width: 100%;\n    height: 100%;\n  }\n\n  &svg path {\n    fill: inherit;\n  }\n`;\r\nconst MenuItemWithDropdown = ({ topElement, dropDownElements, onToolOpen }) => {\r\n    const [isExpanded, setIsExpanded] = useState(false);\r\n    const collapse = () => {\r\n        setIsExpanded(false);\r\n    };\r\n    const expand = () => {\r\n        onToolOpen();\r\n        setIsExpanded(true);\r\n    };\r\n    return (_jsxs(ElementAndDropdown, { children: [topElement && topElement, dropDownElements.filter((element) => !element.props.isHidden).length !==\r\n                0 && (_jsx(DropDownButton, { onClick: expand, className: `expanded ${topElement?.props.disabled ? 'disabled' : ''}`, children: !isExpanded && _jsx(DropDownArrow, { name: \"dropdown\" }) })), _jsx(Collapse, { in: isExpanded, timeout: \"auto\", onClick: collapse, unmountOnExit: true, children: _jsx(ClickAwayListener, { onClickAway: collapse, children: _jsx(DropDownContent, { children: dropDownElements }) }) })] }));\r\n};\r\n// TODO: refactor, workaround to fix top toolbar dropdowns and left toolbar dropdowns overlapping\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    onToolOpen: () => dispatch({\r\n        type: 'OPENED',\r\n        data: { menuName: null, isSelected: null }\r\n    })\r\n});\r\nexport const ElementWithDropdown = connect(null, mapDispatchToProps)(MenuItemWithDropdown);\r\n//# sourceMappingURL=ElementWithDropdown.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/node_modules/@types/react/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/node_modules/@types/react-redux/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/node_modules/@mui/material/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/node_modules/@emotion/styled/types/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/component/view/icon.jsx"],"map":"{\"version\":3,\"file\":\"ElementWithDropdown.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../src/script/ui/views/toolbars/TopToolbar/ElementWithDropdown.tsx\"],\"names\":[],\"mappings\":\";AAAA;;;;;;;;;;;;;;6EAc6E;AAE7E,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAA;AAChC,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAA;AACrC,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,eAAe,CAAA;AACvE,OAAO,MAAM,MAAM,iBAAiB,CAAA;AAEpC,OAAO,IAAI,MAAM,mCAAmC,CAAA;AAEpD,MAAM,kBAAkB,GAAG,MAAM,CAAC,KAAK,CAAC,CAAA;;CAEvC,CAAA;AAED,MAAM,eAAe,GAAG,MAAM,CAAC,KAAK,CAAC,CAAA;;;;;;;;;;;;;;CAcpC,CAAA;AAED,MAAM,cAAc,GAAG,MAAM,CAAC,UAAU,CAAC,CAAA;;;;;;;;;;;;;CAaxC,CAAA;AAED,MAAM,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,CAAA;;;;;;;;;;;;;;;;;;;;;;CAsBjC,CAAA;AAQD,MAAM,oBAAoB,GAAG,CAAC,EAC5B,UAAU,EACV,gBAAgB,EAChB,UAAU,EACe,EAAE,EAAE;IAC7B,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,QAAQ,CAAU,KAAK,CAAC,CAAA;IAE5D,MAAM,QAAQ,GAAG,GAAG,EAAE;QACpB,aAAa,CAAC,KAAK,CAAC,CAAA;IACtB,CAAC,CAAA;IAED,MAAM,MAAM,GAAG,GAAG,EAAE;QAClB,UAAU,EAAE,CAAA;QACZ,aAAa,CAAC,IAAI,CAAC,CAAA;IACrB,CAAC,CAAA;IAED,OAAO,CACL,MAAC,kBAAkB,eAChB,UAAU,IAAI,UAAU,EACxB,gBAAgB,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,MAAM;gBACnE,CAAC,IAAI,CACL,KAAC,cAAc,IACb,OAAO,EAAE,MAAM,EACf,SAAS,EAAE,YAAY,UAAU,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,YAEpE,CAAC,UAAU,IAAI,KAAC,aAAa,IAAC,IAAI,EAAC,UAAU,GAAG,GAClC,CAClB,EACD,KAAC,QAAQ,IAAC,EAAE,EAAE,UAAU,EAAE,OAAO,EAAC,MAAM,EAAC,OAAO,EAAE,QAAQ,EAAE,aAAa,kBACvE,KAAC,iBAAiB,IAAC,WAAW,EAAE,QAAQ,YACtC,KAAC,eAAe,cAAE,gBAAgB,GAAmB,GACnC,GACX,IACQ,CACtB,CAAA;AACH,CAAC,CAAA;AAED,iGAAiG;AACjG,MAAM,kBAAkB,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IACxC,UAAU,EAAE,GAAG,EAAE,CACf,QAAQ,CAAC;QACP,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE;KAC3C,CAAC;CACL,CAAC,CAAA;AAEF,MAAM,CAAC,MAAM,mBAAmB,GAAG,OAAO,CACxC,IAAI,EACJ,kBAAkB,CACnB,CAAC,oBAAoB,CAAC,CAAA\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/script/ui/views/toolbars/TopToolbar/ElementWithDropdown.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\n/// <reference types=\"react\" />\r\ninterface ElementWithDropdownProps {\r\n    topElement?: JSX.Element;\r\n    dropDownElements: JSX.Element[];\r\n    onToolOpen: () => void;\r\n}\r\nexport declare const ElementWithDropdown: import(\"react-redux\").ConnectedComponent<({ topElement, dropDownElements, onToolOpen }: ElementWithDropdownProps) => JSX.Element, import(\"react-redux\").Omit<ElementWithDropdownProps, \"onToolOpen\">>;\r\nexport {};\r\n"}}
