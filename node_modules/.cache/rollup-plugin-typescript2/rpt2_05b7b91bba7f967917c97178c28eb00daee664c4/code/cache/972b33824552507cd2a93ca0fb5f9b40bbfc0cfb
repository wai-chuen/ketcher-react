{"code":"import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\r\n/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { ToolbarGroupItem } from '../../ToolbarGroupItem';\r\nimport { transformOptions } from '../leftToolbarOptions';\r\nimport { mediaSizes } from '../../mediaSizes';\r\nconst Transform = (props) => {\r\n    const { height, ...rest } = props;\r\n    if (height && height <= mediaSizes.transformCollapsableHeight) {\r\n        return (_jsx(ToolbarGroupItem, { id: \"transforms\", options: transformOptions, ...rest }));\r\n    }\r\n    return (_jsxs(_Fragment, { children: [_jsx(ToolbarGroupItem, { id: \"transform-rotate\", ...rest }), _jsx(ToolbarGroupItem, { id: \"transform-flip-h\", ...rest }), _jsx(ToolbarGroupItem, { id: \"transform-flip-v\", ...rest })] }));\r\n};\r\nexport { Transform };\r\n//# sourceMappingURL=Transform.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/toolbars/ToolbarGroupItem/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/toolbars/LeftToolbar/leftToolbarOptions.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/toolbars/mediaSizes.ts"],"map":"{\"version\":3,\"file\":\"Transform.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../../src/script/ui/views/toolbars/LeftToolbar/Transform/Transform.tsx\"],\"names\":[],\"mappings\":\";AAAA;;;;;;;;;;;;;;6EAc6E;AAE7E,OAAO,EACL,gBAAgB,EAGjB,MAAM,wBAAwB,CAAA;AAE/B,OAAO,EAAE,gBAAgB,EAAE,MAAM,uBAAuB,CAAA;AACxD,OAAO,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAA;AAS7C,MAAM,SAAS,GAAG,CAAC,KAAY,EAAE,EAAE;IACjC,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,EAAE,GAAG,KAAK,CAAA;IAEjC,IAAI,MAAM,IAAI,MAAM,IAAI,UAAU,CAAC,0BAA0B,EAAE;QAC7D,OAAO,CACL,KAAC,gBAAgB,IAAC,EAAE,EAAC,YAAY,EAAC,OAAO,EAAE,gBAAgB,KAAM,IAAI,GAAI,CAC1E,CAAA;KACF;IAED,OAAO,CACL,8BACE,KAAC,gBAAgB,IAAC,EAAE,EAAC,kBAAkB,KAAK,IAAI,GAAI,EACpD,KAAC,gBAAgB,IAAC,EAAE,EAAC,kBAAkB,KAAK,IAAI,GAAI,EACpD,KAAC,gBAAgB,IAAC,EAAE,EAAC,kBAAkB,KAAK,IAAI,GAAI,IACnD,CACJ,CAAA;AACH,CAAC,CAAA;AAGD,OAAO,EAAE,SAAS,EAAE,CAAA\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/script/ui/views/toolbars/LeftToolbar/Transform/Transform.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\n/// <reference types=\"react\" />\r\nimport { ToolbarGroupItemCallProps, ToolbarGroupItemProps } from '../../ToolbarGroupItem';\r\ninterface TransformProps extends Omit<ToolbarGroupItemProps, 'id' | 'options'> {\r\n    height?: number;\r\n}\r\ndeclare type TransformCallProps = ToolbarGroupItemCallProps;\r\ndeclare type Props = TransformProps & TransformCallProps;\r\ndeclare const Transform: (props: Props) => JSX.Element;\r\nexport type { TransformProps, TransformCallProps };\r\nexport { Transform };\r\n"}}
