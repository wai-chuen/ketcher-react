{"code":"import { Action, fromItemsFuse, setExpandSGroup } from 'ketcher-core';\r\nimport { getGroupIdsFromItemMaps } from './getGroupIdsFromItems';\r\nexport function dropAndMerge(editor, mergeItems, action) {\r\n    const restruct = editor.render.ctab;\r\n    const isMerging = !!mergeItems;\r\n    let dropItemAction = new Action();\r\n    if (isMerging) {\r\n        const expandGroupsAction = getExpandGroupsInMergeAction(editor.render.ctab, mergeItems);\r\n        dropItemAction = dropItemAction.mergeWith(expandGroupsAction);\r\n    }\r\n    dropItemAction = fromItemsFuse(restruct, mergeItems).mergeWith(dropItemAction);\r\n    if (action) {\r\n        dropItemAction = dropItemAction.mergeWith(action);\r\n    }\r\n    editor.hover(null);\r\n    if (isMerging)\r\n        editor.selection(null);\r\n    if (dropItemAction?.operations.length > 0) {\r\n        editor.update(dropItemAction);\r\n    }\r\n}\r\nfunction getExpandGroupsInMergeAction(restruct, mergeItems) {\r\n    const action = new Action();\r\n    const groupsInMerge = getGroupIdsFromItemMaps(restruct.molecule, mergeItems);\r\n    if (groupsInMerge.length) {\r\n        groupsInMerge.forEach((groupId) => {\r\n            action.mergeWith(setExpandSGroup(restruct, groupId, { expanded: true }));\r\n        });\r\n    }\r\n    return action;\r\n}\r\n//# sourceMappingURL=dropAndMerge.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/dist/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/editor/Editor.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/editor/tool/helper/getGroupIdsFromItems.ts"],"map":"{\"version\":3,\"file\":\"dropAndMerge.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/script/editor/tool/helper/dropAndMerge.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,MAAM,EAAE,aAAa,EAAY,eAAe,EAAE,MAAM,cAAc,CAAA;AAE/E,OAAO,EAAE,uBAAuB,EAAE,MAAM,wBAAwB,CAAA;AAOhE,MAAM,UAAU,YAAY,CAC1B,MAAc,EACd,UAAsB,EACtB,MAAe;IAEf,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAA;IACnC,MAAM,SAAS,GAAG,CAAC,CAAC,UAAU,CAAA;IAC9B,IAAI,cAAc,GAAG,IAAI,MAAM,EAAE,CAAA;IAEjC,IAAI,SAAS,EAAE;QACb,MAAM,kBAAkB,GAAG,4BAA4B,CACrD,MAAM,CAAC,MAAM,CAAC,IAAI,EAClB,UAAU,CACX,CAAA;QACD,cAAc,GAAG,cAAc,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAA;KAC9D;IAED,cAAc,GAAG,aAAa,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC,SAAS,CAAC,cAAc,CAAC,CAAA;IAE9E,IAAI,MAAM,EAAE;QACV,cAAc,GAAG,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;KAClD;IAED,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;IAClB,IAAI,SAAS;QAAE,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;IAErC,IAAI,cAAc,EAAE,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;QACzC,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,CAAA;KAC9B;AACH,CAAC;AAED,SAAS,4BAA4B,CACnC,QAAkB,EAClB,UAAsB;IAEtB,MAAM,MAAM,GAAG,IAAI,MAAM,EAAE,CAAA;IAC3B,MAAM,aAAa,GAAG,uBAAuB,CAAC,QAAQ,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAA;IAC5E,IAAI,aAAa,CAAC,MAAM,EAAE;QACxB,aAAa,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAChC,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,QAAQ,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAA;QAC1E,CAAC,CAAC,CAAA;KACH;IAED,OAAO,MAAM,CAAA;AACf,CAAC\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/script/editor/tool/helper/dropAndMerge.d.ts","writeByteOrderMark":false,"text":"import { Action } from 'ketcher-core';\r\nimport Editor from '../../Editor';\r\ndeclare type MergeItems = {\r\n    atoms: Map<number, number>;\r\n    bonds: Map<number, number>;\r\n};\r\nexport declare function dropAndMerge(editor: Editor, mergeItems: MergeItems, action?: Action): void;\r\nexport {};\r\n"}}
