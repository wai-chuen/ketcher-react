{"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { saveAs } from 'file-saver';\r\nimport { useAppContext } from '../../../../hooks';\r\nconst SaveButton = (props) => {\r\n    const noop = () => null;\r\n    const { server, filename = 'unnamed', outputFormat, data, type, mode = 'saveFile', onSave = noop, onError = noop, className, title } = props;\r\n    const { getKetcherInstance } = useAppContext();\r\n    const save = (event) => {\r\n        event.preventDefault();\r\n        switch (mode) {\r\n            case 'saveImage':\r\n                saveImage();\r\n                break;\r\n            case 'saveFile':\r\n            default:\r\n                saveFile();\r\n        }\r\n    };\r\n    const saveFile = () => {\r\n        if (data) {\r\n            try {\r\n                fileSaver(server).then((saver) => {\r\n                    saver(data, filename, type);\r\n                    onSave();\r\n                });\r\n            }\r\n            catch (error) {\r\n                onError(error);\r\n            }\r\n        }\r\n    };\r\n    const saveImage = () => {\r\n        const ketcherInstance = getKetcherInstance();\r\n        if (outputFormat) {\r\n            ketcherInstance\r\n                .generateImage(data, { outputFormat })\r\n                .then((blob) => {\r\n                saveAs(blob, `${filename}.${outputFormat}`);\r\n                onSave();\r\n            })\r\n                .catch((error) => {\r\n                onError(error);\r\n            });\r\n        }\r\n    };\r\n    return (_jsx(\"button\", { title: title, className: className, onClick: (event) => {\r\n            save(event);\r\n        }, children: props.children }));\r\n};\r\nconst fileSaver = (server) => {\r\n    return new Promise((resolve, reject) => {\r\n        if (global.Blob && saveAs) {\r\n            resolve((data, fn, type) => {\r\n                const blob = new Blob([data], { type }); // eslint-disable-line no-undef\r\n                saveAs(blob, fn);\r\n            });\r\n        }\r\n        else if (server) {\r\n            resolve(server.then(() => {\r\n                throw Error(\"Server doesn't still support echo method\");\r\n            }));\r\n        }\r\n        else {\r\n            reject(new Error('Your browser does not support opening files locally'));\r\n        }\r\n    });\r\n};\r\nexport { SaveButton };\r\n//# sourceMappingURL=savebutton.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/dist/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/node_modules/file-saver/dist/FileSaver.min.js","/usr/local/google/home/waich/workspace/ketcher/node_modules/@types/react/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/hooks/index.ts"],"map":"{\"version\":3,\"file\":\"savebutton.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/script/ui/component/view/savebutton.tsx\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/script/ui/component/view/savebutton.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { OutputFormatType } from 'ketcher-core';\r\nimport { PropsWithChildren } from 'react';\r\ndeclare type Props = {\r\n    server?: any;\r\n    filename: string;\r\n    outputFormat?: OutputFormatType;\r\n    data: any;\r\n    type?: string;\r\n    mode?: string;\r\n    onSave?: () => void;\r\n    onError?: (err: any) => void;\r\n    className?: string;\r\n    title?: string;\r\n};\r\ndeclare type SaveButtonProps = PropsWithChildren<Props>;\r\ndeclare const SaveButton: (props: SaveButtonProps) => JSX.Element;\r\nexport { SaveButton };\r\n"}}
