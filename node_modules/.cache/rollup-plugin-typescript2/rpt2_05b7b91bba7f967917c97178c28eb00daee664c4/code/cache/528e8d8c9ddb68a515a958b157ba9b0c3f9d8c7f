{"code":"import { mergeMapOfItemsToSet } from 'ketcher-core';\r\nfunction getGroupIdsFromItemArrays(struct, items) {\r\n    if (!struct.sgroups.size)\r\n        return [];\r\n    const groupsIds = new Set();\r\n    items?.atoms?.forEach((atomId) => {\r\n        const groupId = struct.getGroupIdFromAtomId(atomId);\r\n        if (groupId !== null)\r\n            groupsIds.add(groupId);\r\n    });\r\n    items?.bonds?.forEach((bondId) => {\r\n        const groupId = struct.getGroupIdFromBondId(bondId);\r\n        if (groupId !== null)\r\n            groupsIds.add(groupId);\r\n    });\r\n    return Array.from(groupsIds);\r\n}\r\nfunction getGroupIdsFromItemMaps(struct, mergeMaps) {\r\n    const atoms = mergeMaps?.atoms && Array.from(mergeMapOfItemsToSet(mergeMaps.atoms));\r\n    const bonds = mergeMaps?.bonds && Array.from(mergeMapOfItemsToSet(mergeMaps.bonds));\r\n    return getGroupIdsFromItemArrays(struct, { atoms, bonds });\r\n}\r\nexport { getGroupIdsFromItemArrays, getGroupIdsFromItemMaps };\r\n//# sourceMappingURL=getGroupIdsFromItems.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"getGroupIdsFromItems.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/script/editor/tool/helper/getGroupIdsFromItems.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,oBAAoB,EAAU,MAAM,cAAc,CAAA;AAO3D,SAAS,yBAAyB,CAAC,MAAc,EAAE,KAAa;IAC9D,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI;QAAE,OAAO,EAAE,CAAA;IAEnC,MAAM,SAAS,GAAG,IAAI,GAAG,EAAU,CAAA;IAEnC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;QAC/B,MAAM,OAAO,GAAG,MAAM,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAA;QACnD,IAAI,OAAO,KAAK,IAAI;YAAE,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;IAC9C,CAAC,CAAC,CAAA;IAEF,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;QAC/B,MAAM,OAAO,GAAG,MAAM,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAA;QACnD,IAAI,OAAO,KAAK,IAAI;YAAE,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;IAC9C,CAAC,CAAC,CAAA;IAEF,OAAO,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;AAC9B,CAAC;AAOD,SAAS,uBAAuB,CAC9B,MAAc,EACd,SAA4B;IAE5B,MAAM,KAAK,GACT,SAAS,EAAE,KAAK,IAAI,KAAK,CAAC,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAA;IACvE,MAAM,KAAK,GACT,SAAS,EAAE,KAAK,IAAI,KAAK,CAAC,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAA;IAEvE,OAAO,yBAAyB,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAA;AAC5D,CAAC;AAED,OAAO,EAAE,yBAAyB,EAAE,uBAAuB,EAAE,CAAA\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/script/editor/tool/helper/getGroupIdsFromItems.d.ts","writeByteOrderMark":false,"text":"import { Struct } from 'ketcher-core';\r\ndeclare type Items = {\r\n    atoms?: number[];\r\n    bonds?: number[];\r\n};\r\ndeclare function getGroupIdsFromItemArrays(struct: Struct, items?: Items): number[];\r\ndeclare type MergeItems = {\r\n    atoms: Map<number, number>;\r\n    bonds: Map<number, number>;\r\n};\r\ndeclare function getGroupIdsFromItemMaps(struct: Struct, mergeMaps: MergeItems | null): number[];\r\nexport { getGroupIdsFromItemArrays, getGroupIdsFromItemMaps };\r\n"}}
