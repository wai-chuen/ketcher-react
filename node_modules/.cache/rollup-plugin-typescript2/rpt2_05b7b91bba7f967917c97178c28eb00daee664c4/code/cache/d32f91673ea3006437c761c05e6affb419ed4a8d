{"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport Form, { Field } from '../../../../../component/form/form/form';\r\nimport { Dialog } from '../../../../components';\r\nimport classes from './Automap.module.less';\r\nimport Select from '../../../../../component/form/Select/Select';\r\nimport { getSelectOptionsFromSchema } from '../../../../../utils';\r\nexport const automapSchema = {\r\n    title: 'Reaction Auto-Mapping',\r\n    type: 'object',\r\n    required: ['mode'],\r\n    properties: {\r\n        mode: {\r\n            title: 'Mode',\r\n            enum: ['discard', 'keep', 'alter', 'clear'],\r\n            enumNames: ['Discard', 'Keep', 'Alter', 'Clear'],\r\n            default: 'discard'\r\n        }\r\n    }\r\n};\r\nconst Automap = (props) => {\r\n    const { formState, ...rest } = props;\r\n    return (_jsx(Dialog, { title: \"Reaction Auto-Mapping\", className: classes.automap, result: () => formState.result, valid: () => formState.valid, params: rest, withDivider: true, buttons: ['Cancel', 'OK'], buttonsNameMap: { OK: 'Apply' }, children: _jsx(Form, { schema: automapSchema, ...formState, children: _jsx(Field, { name: \"mode\", options: getSelectOptionsFromSchema(automapSchema.properties.mode), ...props, component: Select }) }) }));\r\n};\r\nexport default Automap;\r\n//# sourceMappingURL=Automap.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/modal/modal.types.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/component/form/form/form.jsx","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/components/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/component/form/Select/Select.tsx","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/utils/index.ts"],"map":"{\"version\":3,\"file\":\"Automap.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../../../src/script/ui/views/modal/components/toolbox/Automap/Automap.tsx\"],\"names\":[],\"mappings\":\";AAiBA,OAAO,IAAI,EAAE,EAAE,KAAK,EAAE,MAAM,yCAAyC,CAAA;AACrE,OAAO,EAAE,MAAM,EAAE,MAAM,wBAAwB,CAAA;AAC/C,OAAO,OAAO,MAAM,uBAAuB,CAAA;AAC3C,OAAO,MAAM,MAAM,6CAA6C,CAAA;AAChE,OAAO,EAAE,0BAA0B,EAAE,MAAM,sBAAsB,CAAA;AAIjE,MAAM,CAAC,MAAM,aAAa,GAAG;IAC3B,KAAK,EAAE,uBAAuB;IAC9B,IAAI,EAAE,QAAQ;IACd,QAAQ,EAAE,CAAC,MAAM,CAAC;IAClB,UAAU,EAAE;QACV,IAAI,EAAE;YACJ,KAAK,EAAE,MAAM;YACb,IAAI,EAAE,CAAC,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC;YAC3C,SAAS,EAAE,CAAC,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC;YAChD,OAAO,EAAE,SAAS;SACnB;KACF;CACF,CAAA;AAED,MAAM,OAAO,GAAG,CAAC,KAAY,EAAE,EAAE;IAC/B,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,EAAE,GAAG,KAAK,CAAA;IACpC,OAAO,CACL,KAAC,MAAM,IACL,KAAK,EAAC,uBAAuB,EAC7B,SAAS,EAAE,OAAO,CAAC,OAAO,EAC1B,MAAM,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,MAAM,EAC9B,KAAK,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,KAAK,EAC5B,MAAM,EAAE,IAAI,EACZ,WAAW,QACX,OAAO,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,EACzB,cAAc,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,YAE/B,KAAC,IAAI,IAAC,MAAM,EAAE,aAAa,KAAM,SAAS,YACxC,KAAC,KAAK,IACJ,IAAI,EAAC,MAAM,EACX,OAAO,EAAE,0BAA0B,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,KAC9D,KAAK,EACT,SAAS,EAAE,MAAM,GACjB,GACG,GACA,CACV,CAAA;AACH,CAAC,CAAA;AAED,eAAe,OAAO,CAAA\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/script/ui/views/modal/components/toolbox/Automap/Automap.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\n/// <reference types=\"react\" />\r\nimport { BaseCallProps, BaseProps } from '../../../modal.types';\r\ndeclare type Props = BaseProps & BaseCallProps;\r\nexport declare const automapSchema: {\r\n    title: string;\r\n    type: string;\r\n    required: string[];\r\n    properties: {\r\n        mode: {\r\n            title: string;\r\n            enum: string[];\r\n            enumNames: string[];\r\n            default: string;\r\n        };\r\n    };\r\n};\r\ndeclare const Automap: (props: Props) => JSX.Element;\r\nexport default Automap;\r\n"}}
