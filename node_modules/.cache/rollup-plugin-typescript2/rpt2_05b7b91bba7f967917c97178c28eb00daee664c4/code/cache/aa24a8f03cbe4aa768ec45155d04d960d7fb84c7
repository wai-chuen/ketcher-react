{"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\n/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { useState } from 'react';\r\nimport classes from './Accordion.module.less';\r\nimport clsx from 'clsx';\r\nimport Icon from '../../../../../../component/view/icon';\r\nconst Accordion = ({ tabs, className, changedGroups }) => {\r\n    const [expandedAccordions, setExpandedAccordions] = useState([\r\n        'General'\r\n    ]);\r\n    const handleAccordionChange = (accordion) => () => {\r\n        const isExpand = !expandedAccordions.includes(accordion);\r\n        setExpandedAccordions(isExpand\r\n            ? [...expandedAccordions, accordion]\r\n            : [...expandedAccordions].filter((expandedAccordion) => expandedAccordion !== accordion));\r\n    };\r\n    return (_jsx(\"div\", { className: clsx(classes.accordionWrapper, className), children: tabs.map(({ label, content, key }) => {\r\n            const shouldGroupBeRended = expandedAccordions.includes(label);\r\n            return (_jsxs(\"div\", { children: [_jsx(\"div\", { onClick: handleAccordionChange(label), className: classes.accordionSummaryWrapper, children: _jsxs(\"div\", { className: classes.accordionSummary, children: [_jsx(Icon, { className: clsx({\r\n                                        [classes.expandIcon]: true,\r\n                                        [classes.turnedIcon]: !shouldGroupBeRended\r\n                                    }), name: \"chevron\" }), _jsxs(\"div\", { className: classes.groupLabel, children: [_jsx(Icon, { name: \"elements-group\", className: classes.groupIcon }), _jsx(\"span\", { children: label })] }), changedGroups.has(label) && (_jsx(\"span\", { className: classes.changeMarker }))] }) }), _jsx(\"div\", { className: clsx({\r\n                            [classes.accordionDetailsWrapper]: true,\r\n                            [classes.hiddenAccordion]: !shouldGroupBeRended\r\n                        }), children: _jsx(\"div\", { className: classes.accordionDetails, children: content }) })] }, key));\r\n        }) }));\r\n};\r\nexport default Accordion;\r\n//# sourceMappingURL=Accordion.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/node_modules/@types/react/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/node_modules/clsx/clsx.d.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/component/view/icon.jsx"],"map":"{\"version\":3,\"file\":\"Accordion.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../../../../src/script/ui/views/modal/components/meta/Settings/Accordion/Accordion.tsx\"],\"names\":[],\"mappings\":\";AAAA;;;;;;;;;;;;;;6EAc6E;AAE7E,OAAc,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAA;AACvC,OAAO,OAAO,MAAM,yBAAyB,CAAA;AAC7C,OAAO,IAAI,MAAM,MAAM,CAAA;AACvB,OAAO,IAAI,MAAM,uCAAuC,CAAA;AAExD,MAAM,SAAS,GAAG,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,aAAa,EAAE,EAAsB,EAAE;IAC3E,MAAM,CAAC,kBAAkB,EAAE,qBAAqB,CAAC,GAAG,QAAQ,CAAW;QACrE,SAAS;KACV,CAAC,CAAA;IAEF,MAAM,qBAAqB,GAAG,CAAC,SAAS,EAAE,EAAE,CAAC,GAAG,EAAE;QAChD,MAAM,QAAQ,GAAG,CAAC,kBAAkB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAA;QACxD,qBAAqB,CACnB,QAAQ;YACN,CAAC,CAAC,CAAC,GAAG,kBAAkB,EAAE,SAAS,CAAC;YACpC,CAAC,CAAC,CAAC,GAAG,kBAAkB,CAAC,CAAC,MAAM,CAC5B,CAAC,iBAAiB,EAAE,EAAE,CAAC,iBAAiB,KAAK,SAAS,CACvD,CACN,CAAA;IACH,CAAC,CAAA;IAED,OAAO,CACL,cAAK,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,SAAS,CAAC,YACtD,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,EAAE,EAAE;YACpC,MAAM,mBAAmB,GAAG,kBAAkB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA;YAC9D,OAAO,CACL,0BACE,cACE,OAAO,EAAE,qBAAqB,CAAC,KAAK,CAAC,EACrC,SAAS,EAAE,OAAO,CAAC,uBAAuB,YAE1C,eAAK,SAAS,EAAE,OAAO,CAAC,gBAAgB,aACtC,KAAC,IAAI,IACH,SAAS,EAAE,IAAI,CAAC;wCACd,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,IAAI;wCAC1B,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,mBAAmB;qCAC3C,CAAC,EACF,IAAI,EAAC,SAAS,GACd,EACF,eAAK,SAAS,EAAE,OAAO,CAAC,UAAU,aAChC,KAAC,IAAI,IAAC,IAAI,EAAC,gBAAgB,EAAC,SAAS,EAAE,OAAO,CAAC,SAAS,GAAI,EAC5D,yBAAO,KAAK,GAAQ,IAChB,EACL,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAC3B,eAAM,SAAS,EAAE,OAAO,CAAC,YAAY,GAAS,CAC/C,IACG,GACF,EACN,cACE,SAAS,EAAE,IAAI,CAAC;4BACd,CAAC,OAAO,CAAC,uBAAuB,CAAC,EAAE,IAAI;4BACvC,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE,CAAC,mBAAmB;yBAChD,CAAC,YAEF,cAAK,SAAS,EAAE,OAAO,CAAC,gBAAgB,YAAG,OAAO,GAAO,GACrD,KA7BE,GAAG,CA8BP,CACP,CAAA;QACH,CAAC,CAAC,GACE,CACP,CAAA;AACH,CAAC,CAAA;AAED,eAAe,SAAS,CAAA\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/script/ui/views/modal/components/meta/Settings/Accordion/Accordion.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport React from 'react';\r\ndeclare const Accordion: ({ tabs, className, changedGroups }: {\r\n    tabs: any;\r\n    className: any;\r\n    changedGroups: any;\r\n}) => React.ReactElement;\r\nexport default Accordion;\r\n"}}
