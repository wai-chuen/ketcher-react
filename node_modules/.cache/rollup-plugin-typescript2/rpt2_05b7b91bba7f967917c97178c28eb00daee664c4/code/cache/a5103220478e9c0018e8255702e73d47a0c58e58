{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { Action, SGroup, fromBondsAttrs, fromItemsFuse, fromMultipleMove, fromTextDeletion, fromTextUpdating, getHoverToFuse, FunctionalGroup, fromSimpleObjectResizing, fromArrowResizing, Vec2 } from 'ketcher-core';\r\nimport LassoHelper from './helper/lasso';\r\nimport { atomLongtapEvent } from './atom';\r\nimport SGroupTool from './sgroup';\r\nimport utils from '../shared/utils';\r\nimport { xor } from 'lodash/fp';\r\nimport { dropAndMerge } from './helper/dropAndMerge';\r\nimport { getGroupIdsFromItemArrays } from './helper/getGroupIdsFromItems';\r\nimport { getMergeItems } from './helper/getMergeItems';\r\nimport { updateSelectedAtoms } from 'src/script/ui/state/modal/atoms';\r\nimport { isCloseToEdgeOfCanvas, isCloseToEdgeOfScreen, scrollByVector, shiftAndExtendCanvasByVector } from '../utils/canvasExtension';\r\nclass SelectTool {\r\n    #mode;\r\n    #lassoHelper;\r\n    editor;\r\n    dragCtx;\r\n    constructor(editor, mode) {\r\n        this.editor = editor;\r\n        this.#mode = mode;\r\n        this.#lassoHelper = new LassoHelper(this.#mode === 'lasso' ? 0 : 1, editor, this.#mode === 'fragment');\r\n    }\r\n    isSelectionRunning() {\r\n        return this.#lassoHelper.running();\r\n    }\r\n    mousedown(event) {\r\n        const rnd = this.editor.render;\r\n        const ctab = rnd.ctab;\r\n        const molecule = ctab.molecule;\r\n        this.editor.hover(null); // TODO review hovering for touch devicess\r\n        const map = getMapsForClosestItem(this.#lassoHelper.fragment || event.ctrlKey);\r\n        const ci = this.editor.findItem(event, map, null);\r\n        const selected = {\r\n            ...(ci?.map === 'atoms' && { atoms: [ci.id] }),\r\n            ...(ci?.map === 'bonds' && { bonds: [ci.id] })\r\n        };\r\n        const selectedSgroups = ci\r\n            ? getGroupIdsFromItemArrays(molecule, selected)\r\n            : [];\r\n        const newSelected = getNewSelectedItems(this.editor, selectedSgroups);\r\n        if (newSelected.atoms?.length || newSelected.bonds?.length) {\r\n            this.editor.selection(newSelected);\r\n        }\r\n        this.dragCtx = {\r\n            item: ci,\r\n            xy0: rnd.page2obj(event)\r\n        };\r\n        if (!ci || ci.map === 'atoms') {\r\n            atomLongtapEvent(this, rnd);\r\n        }\r\n        if (!ci) {\r\n            //  ci.type == 'Canvas'\r\n            if (!event.shiftKey)\r\n                this.editor.selection(null);\r\n            delete this.dragCtx.item;\r\n            if (!this.#lassoHelper.fragment)\r\n                this.#lassoHelper.begin(event);\r\n            return true;\r\n        }\r\n        let sel = closestToSel(ci);\r\n        const sgroups = ctab.sgroups.get(ci.id);\r\n        const selection = this.editor.selection();\r\n        if (ci.map === 'frags') {\r\n            const frag = ctab.frags.get(ci.id);\r\n            sel = {\r\n                atoms: frag.fragGetAtoms(ctab, ci.id),\r\n                bonds: frag.fragGetBonds(ctab, ci.id)\r\n            };\r\n        }\r\n        else if ((ci.map === 'sgroups' || ci.map === 'functionalGroups') &&\r\n            sgroups) {\r\n            const sgroup = sgroups.item;\r\n            sel = {\r\n                atoms: SGroup.getAtoms(molecule, sgroup),\r\n                bonds: SGroup.getBonds(molecule, sgroup)\r\n            };\r\n        }\r\n        else if (ci.map === 'rgroups') {\r\n            const rgroup = ctab.rgroups.get(ci.id);\r\n            sel = {\r\n                atoms: rgroup.getAtoms(rnd),\r\n                bonds: rgroup.getBonds(rnd)\r\n            };\r\n        }\r\n        else if (ci.map === 'sgroupData') {\r\n            if (isSelected(selection, ci))\r\n                return true;\r\n        }\r\n        if (event.shiftKey) {\r\n            this.editor.selection(selMerge(sel, selection, true));\r\n        }\r\n        else {\r\n            this.editor.selection(null);\r\n            this.editor.selection(isSelected(selection, ci) ? selection : sel);\r\n        }\r\n        return true;\r\n    }\r\n    mousemove(event) {\r\n        const editor = this.editor;\r\n        const rnd = editor.render;\r\n        const restruct = editor.render.ctab;\r\n        const dragCtx = this.dragCtx;\r\n        if (dragCtx?.stopTapping)\r\n            dragCtx.stopTapping();\r\n        if (dragCtx?.item) {\r\n            const atoms = restruct.molecule.atoms;\r\n            const selection = editor.selection();\r\n            /* handle atoms */\r\n            const shouldDisplayDegree = dragCtx.item.map === 'atoms' &&\r\n                atoms?.get(dragCtx.item.id)?.neighbors.length === 1 &&\r\n                selection?.atoms?.length === 1 &&\r\n                !selection.bonds;\r\n            if (shouldDisplayDegree) {\r\n                // moving selected objects\r\n                const pos = rnd.page2obj(event);\r\n                const angle = utils.calcAngle(dragCtx.xy0, pos);\r\n                const degrees = utils.degrees(angle);\r\n                editor.event.message.dispatch({ info: degrees + 'ยบ' });\r\n            }\r\n            /* end */\r\n            /* handle simpleObjects */\r\n            if (dragCtx.item.map === 'simpleObjects' && dragCtx.item.ref) {\r\n                if (dragCtx.action)\r\n                    dragCtx.action.perform(rnd.ctab);\r\n                const props = getResizingProps(editor, dragCtx, event);\r\n                dragCtx.action = fromSimpleObjectResizing(...props, event.shiftKey);\r\n                editor.update(dragCtx.action, true);\r\n                return true;\r\n            }\r\n            /* end + fullstop */\r\n            /* handle rxnArrows */\r\n            if (dragCtx.item.map === 'rxnArrows' && dragCtx.item.ref) {\r\n                if (dragCtx?.action)\r\n                    dragCtx.action.perform(rnd.ctab);\r\n                const props = getResizingProps(editor, dragCtx, event);\r\n                dragCtx.action = fromArrowResizing(...props);\r\n                editor.update(dragCtx.action, true);\r\n                return true;\r\n            }\r\n            /* end + fullstop */\r\n            /* handle functionalGroups */\r\n            if (dragCtx.item.map === 'functionalGroups' && !dragCtx.action) {\r\n                editor.event.showInfo.dispatch(null);\r\n            }\r\n            /* end */\r\n            if (dragCtx.action) {\r\n                dragCtx.action.perform(restruct);\r\n            }\r\n            const expSel = editor.explicitSelected();\r\n            dragCtx.action = fromMultipleMove(restruct, expSel, editor.render.page2obj(event).sub(dragCtx.xy0));\r\n            dragCtx.mergeItems = getMergeItems(editor, expSel);\r\n            editor.hover(getHoverToFuse(dragCtx.mergeItems));\r\n            extendCanvas(rnd, event);\r\n            editor.update(dragCtx.action, true);\r\n            return true;\r\n        }\r\n        if (this.#lassoHelper.running()) {\r\n            const sel = this.#lassoHelper.addPoint(event);\r\n            editor.selection(!event.shiftKey ? sel : selMerge(sel, editor.selection(), false));\r\n            return true;\r\n        }\r\n        const maps = getMapsForClosestItem(this.#lassoHelper.fragment || event.ctrlKey);\r\n        editor.hover(editor.findItem(event, maps, null), null, event);\r\n        return true;\r\n    }\r\n    mouseup(event) {\r\n        const editor = this.editor;\r\n        const selected = editor.selection();\r\n        const struct = editor.render.ctab;\r\n        const molecule = struct.molecule;\r\n        // add all items of all selectedSGroups to selection\r\n        const selectedSgroups = selected\r\n            ? getGroupIdsFromItemArrays(molecule, selected)\r\n            : [];\r\n        const newSelected = getNewSelectedItems(editor, selectedSgroups);\r\n        if (this.dragCtx?.stopTapping)\r\n            this.dragCtx.stopTapping();\r\n        /* ignore salts and solvents */\r\n        const possibleSaltOrSolvent = struct.sgroups.get(selectedSgroups[selectedSgroups.length - 1]);\r\n        const isDraggingSaltOrSolventOnStructure = SGroup.isSaltOrSolvent(possibleSaltOrSolvent?.item.data.name);\r\n        if (this.dragCtx &&\r\n            (isDraggingSaltOrSolventOnStructure ||\r\n                this.isDraggingStructureOnSaltOrSolvent(this.dragCtx, struct.sgroups))) {\r\n            preventSaltAndSolventsMerge(struct, this.dragCtx, editor);\r\n            delete this.dragCtx;\r\n        }\r\n        /* end */\r\n        if (this.dragCtx?.item) {\r\n            dropAndMerge(editor, this.dragCtx.mergeItems, this.dragCtx.action);\r\n            delete this.dragCtx;\r\n        }\r\n        else if (this.#lassoHelper.running()) {\r\n            // TODO it catches more events than needed, to be re-factored\r\n            this.selectElementsOnCanvas(newSelected, editor, event);\r\n        }\r\n        else if (this.#lassoHelper.fragment) {\r\n            if (!event.shiftKey &&\r\n                this.editor.render.clientArea.contains(event.target))\r\n                editor.selection(null);\r\n        }\r\n        editor.event.message.dispatch({\r\n            info: false\r\n        });\r\n    }\r\n    dblclick(event) {\r\n        const editor = this.editor;\r\n        const struct = editor.render.ctab;\r\n        const { molecule, sgroups } = struct;\r\n        const functionalGroups = molecule.functionalGroups;\r\n        const rnd = editor.render;\r\n        const ci = editor.findItem(event, ['atoms', 'bonds', 'sgroups', 'functionalGroups', 'sgroupData', 'texts'], null);\r\n        const atomResult = [];\r\n        const bondResult = [];\r\n        const result = [];\r\n        if (ci && functionalGroups && ci.map === 'atoms') {\r\n            const atomId = FunctionalGroup.atomsInFunctionalGroup(functionalGroups, ci.id);\r\n            const atomFromStruct = atomId !== null && struct.atoms.get(atomId)?.a;\r\n            if (atomId !== null &&\r\n                !FunctionalGroup.isAtomInContractedFunctionalGroup(\r\n                // TODO: examine if this code is really needed, seems like its a hack\r\n                atomFromStruct, sgroups, functionalGroups, true))\r\n                atomResult.push(atomId);\r\n        }\r\n        if (ci && functionalGroups && ci.map === 'bonds') {\r\n            const bondId = FunctionalGroup.bondsInFunctionalGroup(molecule, functionalGroups, ci.id);\r\n            const bondFromStruct = bondId !== null && struct.bonds.get(bondId)?.b;\r\n            if (bondFromStruct &&\r\n                !FunctionalGroup.isBondInContractedFunctionalGroup(\r\n                // TODO: examine if this code is really needed, seems like its a hack\r\n                bondFromStruct, sgroups, functionalGroups))\r\n                bondResult.push(bondId);\r\n        }\r\n        if (atomResult.length > 0) {\r\n            for (const id of atomResult) {\r\n                const fgId = FunctionalGroup.findFunctionalGroupByAtom(functionalGroups, id);\r\n                if (fgId !== null && !result.includes(fgId)) {\r\n                    result.push(fgId);\r\n                }\r\n            }\r\n            editor.event.removeFG.dispatch({ fgIds: result });\r\n            return;\r\n        }\r\n        else if (bondResult.length > 0) {\r\n            for (const id of bondResult) {\r\n                const fgId = FunctionalGroup.findFunctionalGroupByBond(molecule, functionalGroups, id);\r\n                if (fgId !== null && !result.includes(fgId)) {\r\n                    result.push(fgId);\r\n                }\r\n            }\r\n            this.editor.event.removeFG.dispatch({ fgIds: result });\r\n            return;\r\n        }\r\n        if (!ci)\r\n            return;\r\n        const selection = this.editor.selection();\r\n        if (ci.map === 'atoms') {\r\n            const atoms = getSelectedAtoms(selection, molecule);\r\n            const changeAtomPromise = editor.event.elementEdit.dispatch(atoms);\r\n            updateSelectedAtoms({\r\n                atoms: selection?.atoms || [],\r\n                editor,\r\n                changeAtomPromise\r\n            });\r\n        }\r\n        else if (ci.map === 'bonds') {\r\n            const bond = rnd.ctab.bonds.get(ci.id)?.b;\r\n            const rb = editor.event.bondEdit.dispatch(bond);\r\n            if (selection?.bonds) {\r\n                const action = new Action();\r\n                const bondsSelection = selection.bonds;\r\n                Promise.resolve(rb)\r\n                    .then((newbond) => {\r\n                    bondsSelection.forEach((bid) => {\r\n                        action.mergeWith(fromBondsAttrs(struct, bid, newbond));\r\n                    });\r\n                    editor.update(action);\r\n                })\r\n                    .catch(() => null); // w/o changes\r\n            }\r\n        }\r\n        else if ((ci.map === 'sgroups' &&\r\n            !FunctionalGroup.isFunctionalGroup(molecule.sgroups.get(ci.id))) ||\r\n            ci.map === 'sgroupData') {\r\n            editor.selection(closestToSel(ci));\r\n            SGroupTool.sgroupDialog(editor, ci.id);\r\n        }\r\n        else if (ci.map === 'texts') {\r\n            editor.selection(closestToSel(ci));\r\n            const text = molecule.texts.get(ci.id);\r\n            const dialog = editor.event.elementEdit.dispatch({\r\n                ...text,\r\n                type: 'text'\r\n            });\r\n            dialog\r\n                .then(({ content }) => {\r\n                if (!content) {\r\n                    editor.update(fromTextDeletion(struct, ci.id));\r\n                }\r\n                else if (content !== text?.content) {\r\n                    editor.update(fromTextUpdating(struct, ci.id, content));\r\n                }\r\n            })\r\n                .catch(() => null);\r\n        }\r\n        return true;\r\n    }\r\n    mouseleave(_) {\r\n        if (this.dragCtx && this.dragCtx.stopTapping)\r\n            this.dragCtx.stopTapping();\r\n        if (this.dragCtx && this.dragCtx.action) {\r\n            const action = this.dragCtx.action;\r\n            this.editor.update(action);\r\n        }\r\n        if (this.#lassoHelper.running())\r\n            this.editor.selection(this.#lassoHelper.end());\r\n        delete this.dragCtx;\r\n        this.editor.hover(null);\r\n    }\r\n    selectElementsOnCanvas(elements, editor, event) {\r\n        const sel = elements.atoms.length > 0\r\n            ? selMerge(this.#lassoHelper.end(), elements, false)\r\n            : this.#lassoHelper.end();\r\n        editor.selection(!event.shiftKey ? sel : selMerge(sel, editor.selection(), false));\r\n    }\r\n    isDraggingStructureOnSaltOrSolvent(dragCtx, sgroups) {\r\n        let isDraggingOnSaltOrSolventAtom;\r\n        let isDraggingOnSaltOrSolventBond;\r\n        if (dragCtx?.mergeItems) {\r\n            const mergeAtoms = Array.from(dragCtx.mergeItems.atoms.values());\r\n            const mergeBonds = Array.from(dragCtx.mergeItems.bonds.values());\r\n            const sgroupsOnCanvas = Array.from(sgroups.values()).map(({ item }) => item);\r\n            isDraggingOnSaltOrSolventAtom = mergeAtoms.some((atomId) => SGroup.isAtomInSaltOrSolvent(atomId, sgroupsOnCanvas));\r\n            isDraggingOnSaltOrSolventBond = mergeBonds.some((bondId) => SGroup.isBondInSaltOrSolvent(bondId, sgroupsOnCanvas));\r\n        }\r\n        return isDraggingOnSaltOrSolventAtom || isDraggingOnSaltOrSolventBond;\r\n    }\r\n}\r\nfunction extendCanvas(render, event) {\r\n    const offset = 1;\r\n    const { isCloseToLeftEdgeOfCanvas, isCloseToTopEdgeOfCanvas, isCloseToRightEdgeOfCanvas, isCloseToBottomEdgeOfCanvas } = isCloseToEdgeOfCanvas(event, render.sz);\r\n    const { isCloseToLeftEdgeOfScreen, isCloseToTopEdgeOfScreen, isCloseToRightEdgeOfScreen, isCloseToBottomEdgeOfScreen } = isCloseToEdgeOfScreen(event);\r\n    if (isCloseToLeftEdgeOfCanvas) {\r\n        shiftAndExtendCanvasByVector(new Vec2(-offset, 0, 0), render);\r\n    }\r\n    if (isCloseToTopEdgeOfCanvas) {\r\n        shiftAndExtendCanvasByVector(new Vec2(0, -offset, 0), render);\r\n    }\r\n    if (isCloseToRightEdgeOfCanvas) {\r\n        shiftAndExtendCanvasByVector(new Vec2(offset, 0, 0), render);\r\n    }\r\n    if (isCloseToBottomEdgeOfCanvas) {\r\n        shiftAndExtendCanvasByVector(new Vec2(0, offset, 0), render);\r\n    }\r\n    const isCloseToSomeEdgeOfCanvas = [\r\n        isCloseToTopEdgeOfCanvas,\r\n        isCloseToRightEdgeOfCanvas,\r\n        isCloseToBottomEdgeOfCanvas,\r\n        isCloseToLeftEdgeOfCanvas\r\n    ].some((isCloseToEdge) => isCloseToEdge);\r\n    if (isCloseToSomeEdgeOfCanvas) {\r\n        return;\r\n    }\r\n    if (isCloseToTopEdgeOfScreen) {\r\n        scrollByVector(new Vec2(0, -offset), render);\r\n    }\r\n    if (isCloseToBottomEdgeOfScreen) {\r\n        scrollByVector(new Vec2(0, offset), render);\r\n    }\r\n    if (isCloseToLeftEdgeOfScreen) {\r\n        scrollByVector(new Vec2(-offset, 0), render);\r\n    }\r\n    if (isCloseToRightEdgeOfScreen) {\r\n        scrollByVector(new Vec2(offset, 0), render);\r\n    }\r\n}\r\nfunction closestToSel(ci) {\r\n    const res = {};\r\n    res[ci.map] = [ci.id];\r\n    return res;\r\n}\r\n// TODO: deep-merge?\r\nexport function selMerge(selection, add, reversible) {\r\n    if (add) {\r\n        Object.keys(add).forEach((item) => {\r\n            if (!selection[item])\r\n                selection[item] = add[item].slice();\r\n            else\r\n                selection[item] = uniqArray(selection[item], add[item], reversible);\r\n        });\r\n    }\r\n    return selection;\r\n}\r\nfunction isSelected(selection, item) {\r\n    return (selection && selection[item.map] && selection[item.map].includes(item.id));\r\n}\r\nexport function getSelectedAtoms(selection, molecule) {\r\n    if (selection?.atoms) {\r\n        return mapAtomIdsToAtoms(selection?.atoms, molecule);\r\n    }\r\n    return [];\r\n}\r\nexport function mapAtomIdsToAtoms(atomsIds, molecule) {\r\n    return atomsIds.map((atomId) => {\r\n        const atomOrReAtom = molecule.atoms.get(atomId);\r\n        return atomOrReAtom.a || atomOrReAtom;\r\n    });\r\n}\r\nfunction uniqArray(dest, add, reversible) {\r\n    return add.reduce((_, item) => {\r\n        if (reversible)\r\n            dest = xor(dest, [item]);\r\n        else if (!dest.includes(item))\r\n            dest.push(item);\r\n        return dest;\r\n    }, []);\r\n}\r\nfunction preventSaltAndSolventsMerge(struct, dragCtx, editor) {\r\n    const action = dragCtx.action\r\n        ? fromItemsFuse(struct, null).mergeWith(dragCtx.action)\r\n        : fromItemsFuse(struct, null);\r\n    editor.hover(null);\r\n    if (dragCtx.mergeItems) {\r\n        editor.selection(null);\r\n    }\r\n    editor.update(action);\r\n    editor.event.message.dispatch({\r\n        info: false\r\n    });\r\n}\r\nfunction getMapsForClosestItem(selectFragment) {\r\n    return [\r\n        'sgroups',\r\n        'functionalGroups',\r\n        'sgroupData',\r\n        'rgroups',\r\n        'rxnArrows',\r\n        'rxnPluses',\r\n        'enhancedFlags',\r\n        'simpleObjects',\r\n        'texts',\r\n        ...(selectFragment ? ['frags'] : ['atoms', 'bonds'])\r\n    ];\r\n}\r\nfunction getResizingProps(editor, dragCtx, event) {\r\n    const current = editor.render.page2obj(event);\r\n    const diff = current.sub(dragCtx.xy0);\r\n    return [editor.render.ctab, dragCtx.item.id, diff, current, dragCtx.item.ref];\r\n}\r\nfunction getNewSelectedItems(editor, selectedSgroups) {\r\n    const newSelected = {\r\n        atoms: [],\r\n        bonds: []\r\n    };\r\n    for (const sgId of selectedSgroups) {\r\n        const sgroup = editor.render.ctab.sgroups.get(sgId);\r\n        if (sgroup) {\r\n            const sgroupAtoms = SGroup.getAtoms(editor.struct(), sgroup.item);\r\n            const sgroupBonds = SGroup.getBonds(editor.struct(), sgroup.item);\r\n            newSelected.atoms.push(...sgroupAtoms);\r\n            newSelected.bonds.push(...sgroupBonds);\r\n        }\r\n    }\r\n    return newSelected;\r\n}\r\nexport default SelectTool;\r\n//# sourceMappingURL=select.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/dist/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/editor/tool/helper/lasso.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/editor/tool/atom.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/editor/tool/sgroup.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/editor/shared/utils.js","/usr/local/google/home/waich/workspace/ketcher/node_modules/@types/lodash/fp.d.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/editor/Editor.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/editor/tool/helper/dropAndMerge.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/editor/tool/helper/getGroupIdsFromItems.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/editor/tool/helper/getMergeItems.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/state/modal/atoms.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/editor/utils/canvasExtension.ts"],"map":"{\"version\":3,\"file\":\"select.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/script/editor/tool/select.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/script/editor/tool/select.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { ReSGroup, Atom } from 'ketcher-core';\r\nimport { Editor } from '../Editor';\r\ndeclare class SelectTool {\r\n    #private;\r\n    editor: Editor;\r\n    dragCtx: any;\r\n    constructor(editor: any, mode: any);\r\n    isSelectionRunning(): boolean;\r\n    mousedown(event: any): boolean;\r\n    mousemove(event: any): boolean;\r\n    mouseup(event: any): void;\r\n    dblclick(event: any): true | undefined;\r\n    mouseleave(_: any): void;\r\n    selectElementsOnCanvas(elements: {\r\n        atoms: number[];\r\n        bonds: number[];\r\n    }, editor: Editor, event: any): void;\r\n    isDraggingStructureOnSaltOrSolvent(dragCtx: any, sgroups: Map<number, ReSGroup>): any;\r\n}\r\nexport declare function selMerge(selection: any, add: any, reversible: boolean): any;\r\nexport declare function getSelectedAtoms(selection: any, molecule: any): Atom[];\r\nexport declare function mapAtomIdsToAtoms(atomsIds: number[], molecule: any): Atom[];\r\nexport default SelectTool;\r\n"}}
