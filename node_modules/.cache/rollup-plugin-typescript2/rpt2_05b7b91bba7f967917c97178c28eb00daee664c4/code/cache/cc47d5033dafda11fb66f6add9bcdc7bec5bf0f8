{"code":"import { isAttachmentBond } from 'ketcher-core';\r\nexport function isFlipDisabled(editor) {\r\n    const selection = editor.selection();\r\n    const restruct = editor.render.ctab;\r\n    if (!selection) {\r\n        return false;\r\n    }\r\n    const { bonds = [], atoms = [] } = selection;\r\n    const getBondIdsForAtom = (atomId) => {\r\n        const result = [];\r\n        for (const [bondId, bond] of restruct.bonds.entries()) {\r\n            if (bond.b.begin === atomId || bond.b.end === atomId) {\r\n                result.push(bondId);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    const getBondIdsForAttachmentAtoms = () => {\r\n        const result = [];\r\n        for (const atomId of atoms) {\r\n            const atomBondIds = getBondIdsForAtom(atomId);\r\n            for (const atomBondId of atomBondIds) {\r\n                const bond = restruct.bonds.get(atomBondId);\r\n                if (bond && isAttachmentBond(bond.b, selection)) {\r\n                    result.push(atomBondId);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    const getAmountOfAttachmentBonds = () => {\r\n        let amountOfAttachmentBonds = 0;\r\n        const totalBondIds = new Set([...bonds, ...getBondIdsForAttachmentAtoms()]);\r\n        for (const bondId of totalBondIds) {\r\n            const bond = restruct.bonds.get(bondId);\r\n            if (bond && isAttachmentBond(bond.b, selection)) {\r\n                amountOfAttachmentBonds++;\r\n            }\r\n        }\r\n        return amountOfAttachmentBonds;\r\n    };\r\n    return getAmountOfAttachmentBonds() > 1;\r\n}\r\n//# sourceMappingURL=flips.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"flips.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/script/ui/action/flips.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAoB,gBAAgB,EAAE,MAAM,cAAc,CAAA;AAEjE,MAAM,UAAU,cAAc,CAAC,MAAM;IACnC,MAAM,SAAS,GAAyC,MAAM,CAAC,SAAS,EAAE,CAAA;IAC1E,MAAM,QAAQ,GAAa,MAAM,CAAC,MAAM,CAAC,IAAI,CAAA;IAE7C,IAAI,CAAC,SAAS,EAAE;QACd,OAAO,KAAK,CAAA;KACb;IAED,MAAM,EAAE,KAAK,GAAG,EAAE,EAAE,KAAK,GAAG,EAAE,EAAE,GAAG,SAAS,CAAA;IAC5C,MAAM,iBAAiB,GAAG,CAAC,MAAc,EAAE,EAAE;QAC3C,MAAM,MAAM,GAAa,EAAE,CAAA;QAC3B,KAAK,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE;YACrD,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,MAAM,EAAE;gBACpD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;aACpB;SACF;QACD,OAAO,MAAM,CAAA;IACf,CAAC,CAAA;IACD,MAAM,4BAA4B,GAAG,GAAG,EAAE;QACxC,MAAM,MAAM,GAAa,EAAE,CAAA;QAC3B,KAAK,MAAM,MAAM,IAAI,KAAK,EAAE;YAC1B,MAAM,WAAW,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAA;YAC7C,KAAK,MAAM,UAAU,IAAI,WAAW,EAAE;gBACpC,MAAM,IAAI,GAAuB,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAA;gBAC/D,IAAI,IAAI,IAAI,gBAAgB,CAAC,IAAI,CAAC,CAAC,EAAE,SAAS,CAAC,EAAE;oBAC/C,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;iBACxB;aACF;SACF;QACD,OAAO,MAAM,CAAA;IACf,CAAC,CAAA;IACD,MAAM,0BAA0B,GAAG,GAAW,EAAE;QAC9C,IAAI,uBAAuB,GAAG,CAAC,CAAA;QAC/B,MAAM,YAAY,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,EAAE,GAAG,4BAA4B,EAAE,CAAC,CAAC,CAAA;QAC3E,KAAK,MAAM,MAAM,IAAI,YAAY,EAAE;YACjC,MAAM,IAAI,GAAuB,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;YAC3D,IAAI,IAAI,IAAI,gBAAgB,CAAC,IAAI,CAAC,CAAC,EAAE,SAAS,CAAC,EAAE;gBAC/C,uBAAuB,EAAE,CAAA;aAC1B;SACF;QAED,OAAO,uBAAuB,CAAA;IAChC,CAAC,CAAA;IAED,OAAO,0BAA0B,EAAE,GAAG,CAAC,CAAA;AACzC,CAAC\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/script/ui/action/flips.d.ts","writeByteOrderMark":false,"text":"export declare function isFlipDisabled(editor: any): boolean;\r\n"}}
