{"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\n/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport styled from '@emotion/styled';\r\nimport { shortcutStr } from '../shortcutStr';\r\nimport { IconButton } from './IconButton';\r\nconst getIfFullScreen = () => {\r\n    return !!(document.fullscreenElement ||\r\n        document.mozFullScreenElement ||\r\n        document.webkitFullscreenElement ||\r\n        document.msFullscreenElement);\r\n};\r\nconst ControlsPanel = styled('div') `\n  display: flex;\n  align-items: center;\n  flex-grow: 1;\n  justify-content: flex-end;\n`;\r\nexport const SystemControls = ({ disabledButtons, hiddenButtons, onSettingsOpen, \r\n// onHistoryClick,\r\nonFullscreen, onHelp, onAboutOpen, className }) => {\r\n    return (_jsxs(ControlsPanel, { className: className, children: [_jsx(IconButton, { title: \"Settings\", onClick: onSettingsOpen, iconName: \"settings\", disabled: disabledButtons.includes('settings'), isHidden: hiddenButtons.includes('settings') }), _jsx(IconButton, { title: `Help (${shortcutStr(['?', '&', 'Shift+/'])})`, onClick: onHelp, iconName: \"help\", disabled: disabledButtons.includes('help'), isHidden: hiddenButtons.includes('help') }), _jsx(IconButton, { title: \"About\", onClick: onAboutOpen, iconName: \"about\", disabled: disabledButtons.includes('about'), isHidden: hiddenButtons.includes('about') }), _jsx(IconButton, { title: \"Fullscreen mode\", onClick: onFullscreen, iconName: getIfFullScreen() ? 'fullscreen-exit' : 'fullscreen-enter', disabled: disabledButtons.includes('fullscreen'), isHidden: hiddenButtons.includes('fullscreen') })] }));\r\n};\r\n//# sourceMappingURL=SystemControls.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/node_modules/@emotion/styled/types/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/toolbars/shortcutStr.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/toolbars/TopToolbar/IconButton.tsx"],"map":"{\"version\":3,\"file\":\"SystemControls.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../src/script/ui/views/toolbars/TopToolbar/SystemControls.tsx\"],\"names\":[],\"mappings\":\";AAAA;;;;;;;;;;;;;;6EAc6E;AAE7E,OAAO,MAAM,MAAM,iBAAiB,CAAA;AACpC,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAA;AAC5C,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAA;AAazC,MAAM,eAAe,GAAG,GAAG,EAAE;IAC3B,OAAO,CAAC,CAAC,CACP,QAAQ,CAAC,iBAAiB;QAC1B,QAAQ,CAAC,oBAAoB;QAC7B,QAAQ,CAAC,uBAAuB;QAChC,QAAQ,CAAC,mBAAmB,CAC7B,CAAA;AACH,CAAC,CAAA;AAED,MAAM,aAAa,GAAG,MAAM,CAAC,KAAK,CAAC,CAAA;;;;;CAKlC,CAAA;AAED,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,EAC7B,eAAe,EACf,aAAa,EACb,cAAc;AACd,kBAAkB;AAClB,YAAY,EACZ,MAAM,EACN,WAAW,EACX,SAAS,EACW,EAAE,EAAE;IACxB,OAAO,CACL,MAAC,aAAa,IAAC,SAAS,EAAE,SAAS,aASjC,KAAC,UAAU,IACT,KAAK,EAAC,UAAU,EAChB,OAAO,EAAE,cAAc,EACvB,QAAQ,EAAC,UAAU,EACnB,QAAQ,EAAE,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,EAC9C,QAAQ,EAAE,aAAa,CAAC,QAAQ,CAAC,UAAU,CAAC,GAC5C,EACF,KAAC,UAAU,IACT,KAAK,EAAE,SAAS,WAAW,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,SAAS,CAAC,CAAC,GAAG,EACrD,OAAO,EAAE,MAAM,EACf,QAAQ,EAAC,MAAM,EACf,QAAQ,EAAE,eAAe,CAAC,QAAQ,CAAC,MAAM,CAAC,EAC1C,QAAQ,EAAE,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,GACxC,EAEF,KAAC,UAAU,IACT,KAAK,EAAC,OAAO,EACb,OAAO,EAAE,WAAW,EACpB,QAAQ,EAAC,OAAO,EAChB,QAAQ,EAAE,eAAe,CAAC,QAAQ,CAAC,OAAO,CAAC,EAC3C,QAAQ,EAAE,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,GACzC,EACF,KAAC,UAAU,IACT,KAAK,EAAC,iBAAiB,EACvB,OAAO,EAAE,YAAY,EACrB,QAAQ,EAAE,eAAe,EAAE,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,kBAAkB,EACpE,QAAQ,EAAE,eAAe,CAAC,QAAQ,CAAC,YAAY,CAAC,EAChD,QAAQ,EAAE,aAAa,CAAC,QAAQ,CAAC,YAAY,CAAC,GAC9C,IACY,CACjB,CAAA;AACH,CAAC,CAAA\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/script/ui/views/toolbars/TopToolbar/SystemControls.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\n/// <reference types=\"react\" />\r\ninterface SystemControlsProps {\r\n    disabledButtons: string[];\r\n    hiddenButtons: string[];\r\n    className?: string;\r\n    onSettingsOpen: () => void;\r\n    onAboutOpen: () => void;\r\n    onHistoryClick: () => void;\r\n    onFullscreen: () => void;\r\n    onHelp: () => void;\r\n}\r\nexport declare const SystemControls: ({ disabledButtons, hiddenButtons, onSettingsOpen, onFullscreen, onHelp, onAboutOpen, className }: SystemControlsProps) => JSX.Element;\r\nexport {};\r\n"}}
