{"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\n/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { ActionButton } from '../ActionButton';\r\nimport action from '../../../../action';\r\nimport { useRef } from 'react';\r\nimport clsx from 'clsx';\r\nimport Icon from '../../../../component/view/icon';\r\nimport { Portal } from '../../../../Portal';\r\nimport { chooseMultiTool } from './variants/chooseMultiTool';\r\nimport classes from './ToolbarMultiToolItem.module.less';\r\nimport { usePortalOpening } from './usePortalOpening';\r\nimport { usePortalStyle } from './usePortalStyle';\r\nimport { SettingsManager } from '../../../../utils/settingsManager';\r\nconst ToolbarMultiToolItem = (props) => {\r\n    const { id, options, groups, variant, status, opened, indigoVerification, disableableButtons, className, vertical, onAction, onOpen } = props;\r\n    const ref = useRef(null);\r\n    const [isOpen] = usePortalOpening([id, opened, options]);\r\n    const [portalStyle] = usePortalStyle([ref, isOpen]);\r\n    let selected = false;\r\n    let currentId = id;\r\n    const selectedTool = options.find((toolbarItem) => status[toolbarItem.id]?.selected);\r\n    if (selectedTool) {\r\n        currentId = selectedTool.id;\r\n        selected = true;\r\n    }\r\n    const currentStatus = status[currentId];\r\n    // todo: #type find out real type, possible GetActionState is no acceptable here\r\n    // and check this type convert is redundant\r\n    selected = selected || Boolean(currentStatus?.selected);\r\n    const allInnerItemsHidden = options.every((option) => status[option.id]?.hidden);\r\n    const displayMultiToolItem = !(allInnerItemsHidden || currentStatus?.hidden);\r\n    if (!currentStatus && options.length) {\r\n        const savedSelectionTool = SettingsManager.selectionTool;\r\n        const savedSelectionToolId = savedSelectionTool &&\r\n            `${savedSelectionTool.tool}-${savedSelectionTool.opts}`;\r\n        currentId =\r\n            savedSelectionTool &&\r\n                savedSelectionToolId &&\r\n                options.filter((option) => !status[option.id]?.hidden && option.id === savedSelectionToolId)[0]?.id;\r\n        if (!currentId) {\r\n            currentId =\r\n                options.filter((option) => !status[option.id]?.hidden)[0]?.id ||\r\n                    options[0].id;\r\n        }\r\n    }\r\n    const actionButtonProps = {\r\n        disableableButtons,\r\n        indigoVerification,\r\n        onAction: selected ? () => onOpenOptions() : onAction\r\n    };\r\n    const onOpenOptions = () => {\r\n        // todo: same as #type above\r\n        onOpen(id, Boolean(currentStatus?.selected));\r\n    };\r\n    const [Component, portalClassName] = chooseMultiTool(variant);\r\n    return displayMultiToolItem ? (_jsxs(\"div\", { ref: ref, className: classes.root, children: [_jsx(ActionButton, { ...actionButtonProps, className: className, name: currentId, action: action[currentId], status: currentStatus, selected: selected }), !isOpen && (_jsx(Icon, { className: `${classes.icon} ${currentStatus?.selected && classes.iconSelected}`, name: \"dropdown\", onClick: onOpenOptions })), isOpen ? (_jsx(Portal, { isOpen: isOpen, className: clsx(classes.portal, vertical && classes['portal-vertical'], portalClassName), style: portalStyle, children: _jsx(Component, { options: options, groups: groups, status: status, disableableButtons: disableableButtons, indigoVerification: indigoVerification, onAction: onAction }) })) : null] })) : null;\r\n};\r\nexport { ToolbarMultiToolItem };\r\n//# sourceMappingURL=ToolbarMultiToolItem.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/toolbars/ToolbarGroupItem/ActionButton/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/toolbars/ToolbarGroupItem/ToolbarMultiToolItem/variants/variants.types.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/toolbars/toolbar.types.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/action/index.js","/usr/local/google/home/waich/workspace/ketcher/node_modules/@types/react/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/node_modules/clsx/clsx.d.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/component/view/icon.jsx","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/Portal/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/toolbars/ToolbarGroupItem/ToolbarMultiToolItem/variants/chooseMultiTool.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/toolbars/ToolbarGroupItem/ToolbarMultiToolItem/usePortalOpening.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/toolbars/ToolbarGroupItem/ToolbarMultiToolItem/usePortalStyle.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/utils/settingsManager.ts"],"map":"{\"version\":3,\"file\":\"ToolbarMultiToolItem.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../../src/script/ui/views/toolbars/ToolbarGroupItem/ToolbarMultiToolItem/ToolbarMultiToolItem.tsx\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/script/ui/views/toolbars/ToolbarGroupItem/ToolbarMultiToolItem/ToolbarMultiToolItem.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\n/// <reference types=\"react\" />\r\nimport { GroupDescriptor, MultiToolVariant } from './variants/variants.types';\r\nimport { ToolbarItem, ToolbarItemVariant } from '../../toolbar.types';\r\nimport { UiAction, UiActionAction } from '../../../../action';\r\ninterface ToolbarMultiToolItemProps {\r\n    id: ToolbarItemVariant;\r\n    options: ToolbarItem[];\r\n    groups?: GroupDescriptor[];\r\n    variant?: MultiToolVariant;\r\n    status: {\r\n        [key in string]?: UiAction;\r\n    };\r\n    opened: string | null;\r\n    disableableButtons: string[];\r\n    indigoVerification: boolean;\r\n    className?: string;\r\n    vertical?: boolean;\r\n}\r\ninterface ToolbarMultiToolItemCallProps {\r\n    onAction: (action: UiActionAction) => void;\r\n    onOpen: (menuName: string, isSelected: boolean) => void;\r\n}\r\ndeclare type Props = ToolbarMultiToolItemProps & ToolbarMultiToolItemCallProps;\r\ndeclare const ToolbarMultiToolItem: (props: Props) => JSX.Element | null;\r\nexport type { ToolbarMultiToolItemProps, ToolbarMultiToolItemCallProps };\r\nexport { ToolbarMultiToolItem };\r\n"}}
