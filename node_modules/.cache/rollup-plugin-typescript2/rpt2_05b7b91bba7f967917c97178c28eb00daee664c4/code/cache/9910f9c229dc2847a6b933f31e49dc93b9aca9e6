{"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport Icon from '../../../../component/view/icon';\r\nimport classes from './ActionButton.module.less';\r\nimport clsx from 'clsx';\r\nimport { shortcutStr } from '../../shortcutStr';\r\nconst ActionButton = (props) => {\r\n    const { name, action, status = {}, selected = false, disableableButtons, indigoVerification, className, onAction } = props;\r\n    if (status.hidden) {\r\n        return null;\r\n    }\r\n    const shortcut = shortcutStr(action?.shortcut);\r\n    const disabled = status.disabled || (indigoVerification && disableableButtons.includes(name));\r\n    const handleClick = () => {\r\n        if (action?.action) {\r\n            onAction(action.action);\r\n        }\r\n    };\r\n    return (_jsxs(\"button\", { disabled: disabled, onClick: handleClick, title: shortcut ? `${action?.title} (${shortcut})` : action?.title, className: clsx(classes.button, {\r\n            [classes.selected]: selected\r\n        }, className), children: [_jsx(Icon, { name: name }), _jsx(\"kbd\", { children: shortcut })] }));\r\n};\r\nexport { ActionButton };\r\n//# sourceMappingURL=ActionButton.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/action/index.js","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/component/view/icon.jsx","/usr/local/google/home/waich/workspace/ketcher/node_modules/clsx/clsx.d.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/toolbars/shortcutStr.ts"],"map":"{\"version\":3,\"file\":\"ActionButton.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../../src/script/ui/views/toolbars/ToolbarGroupItem/ActionButton/ActionButton.tsx\"],\"names\":[],\"mappings\":\";AAkBA,OAAO,IAAI,MAAM,iCAAiC,CAAA;AAClD,OAAO,OAAO,MAAM,4BAA4B,CAAA;AAChD,OAAO,IAAI,MAAM,MAAM,CAAA;AACvB,OAAO,EAAE,WAAW,EAAE,MAAM,mBAAmB,CAAA;AAqB/C,MAAM,YAAY,GAAG,CAAC,KAAY,EAAE,EAAE;IACpC,MAAM,EACJ,IAAI,EACJ,MAAM,EACN,MAAM,GAAG,EAAE,EACX,QAAQ,GAAG,KAAK,EAChB,kBAAkB,EAClB,kBAAkB,EAClB,SAAS,EACT,QAAQ,EACT,GAAG,KAAK,CAAA;IAET,IAAI,MAAM,CAAC,MAAM,EAAE;QACjB,OAAO,IAAI,CAAA;KACZ;IAED,MAAM,QAAQ,GAAG,WAAW,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;IAC9C,MAAM,QAAQ,GACZ,MAAM,CAAC,QAAQ,IAAI,CAAC,kBAAkB,IAAI,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAA;IAE9E,MAAM,WAAW,GAAG,GAAG,EAAE;QACvB,IAAI,MAAM,EAAE,MAAM,EAAE;YAClB,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;SACxB;IACH,CAAC,CAAA;IAED,OAAO,CACL,kBACE,QAAQ,EAAE,QAAQ,EAClB,OAAO,EAAE,WAAW,EACpB,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,GAAG,MAAM,EAAE,KAAK,KAAK,QAAQ,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,KAAK,EAClE,SAAS,EAAE,IAAI,CACb,OAAO,CAAC,MAAM,EACd;YACE,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,QAAQ;SAC7B,EACD,SAAS,CACV,aAED,KAAC,IAAI,IAAC,IAAI,EAAE,IAAI,GAAI,EACpB,wBAAM,QAAQ,GAAO,IACd,CACV,CAAA;AACH,CAAC,CAAA;AAGD,OAAO,EAAE,YAAY,EAAE,CAAA\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/script/ui/views/toolbars/ToolbarGroupItem/ActionButton/ActionButton.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\n/// <reference types=\"react\" />\r\nimport { UiAction, UiActionAction } from '../../../../action';\r\ninterface ActionButtonProps {\r\n    name: string;\r\n    action?: UiAction;\r\n    status?: {\r\n        disabled?: boolean;\r\n        hidden?: boolean;\r\n    };\r\n    selected?: boolean;\r\n    disableableButtons: string[];\r\n    indigoVerification: boolean;\r\n    className?: string;\r\n}\r\ninterface ActionButtonCallProps {\r\n    onAction: (action: UiActionAction) => void;\r\n}\r\ndeclare type Props = ActionButtonProps & ActionButtonCallProps;\r\ndeclare const ActionButton: (props: Props) => JSX.Element | null;\r\nexport type { ActionButtonProps, ActionButtonCallProps };\r\nexport { ActionButton };\r\n"}}
