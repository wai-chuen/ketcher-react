{"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\n/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport styled from '@emotion/styled';\r\nimport { useResizeObserver } from 'src/hooks';\r\nimport { FileControls } from './FileControls';\r\nimport { ClipboardControls } from './ClipboardControls';\r\nimport { UndoRedo } from './UndoRedo';\r\nimport { ZoomControls } from './ZoomControls';\r\nimport { SystemControls } from './SystemControls';\r\nimport { IconButton } from './IconButton';\r\nimport { ExternalFuncControls } from './ExternalFuncControls';\r\nimport { Divider } from './Divider';\r\nconst collapseLimit = 650;\r\nconst ControlsPanel = styled('div') `\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 0px;\n  height: 36px;\n  padding: 0px 8px;\n\n  .group {\n    display: flex;\n    flex-direction: row;\n    gap: 0px;\n  }\n\n  & * {\n    box-sizing: border-box;\n  }\n\n  @media only screen and (min-width: 1024px) {\n    height: 40px;\n    gap: 4px;\n\n    .group {\n      gap: 4px;\n    }\n  }\n\n  @media only screen and (min-width: 1920px) {\n    height: 64px;\n    gap: 12px;\n  }\n`;\r\nexport const TopToolbar = ({ className, disabledButtons, indigoVerification, hiddenButtons, shortcuts, onClear, onFileOpen, onSave, onUndo, onRedo, onCopy, onCopyMol, onCopyKet, onCopyImage, onCut, onPaste, currentZoom, onZoom, onZoomIn, onZoomOut, onSettingsOpen, onLayout, onClean, onAromatize, onDearomatize, onCalculate, onCheck, onAnalyse, onMiew, onFullscreen, onAbout, onHelp }) => {\r\n    const { ref: resizeRef, width = 50 } = useResizeObserver();\r\n    return (_jsxs(ControlsPanel, { className: className, ref: resizeRef, children: [_jsx(IconButton, { title: \"Clear Canvas\", onClick: onClear, iconName: \"clear\", shortcut: shortcuts.clear, isHidden: hiddenButtons.includes('clear') }), _jsx(FileControls, { onFileOpen: onFileOpen, onSave: onSave, shortcuts: shortcuts, hiddenButtons: hiddenButtons }), _jsx(ClipboardControls, { onCopy: onCopy, onCopyMol: onCopyMol, onCopyKet: onCopyKet, onCopyImage: onCopyImage, onPaste: onPaste, onCut: onCut, shortcuts: shortcuts, disabledButtons: disabledButtons, hiddenButtons: hiddenButtons }), _jsx(UndoRedo, { onUndo: onUndo, onRedo: onRedo, disabledButtons: disabledButtons, hiddenButtons: hiddenButtons, shortcuts: shortcuts }), _jsx(ExternalFuncControls, { onLayout: onLayout, onClean: onClean, onAromatize: onAromatize, onDearomatize: onDearomatize, onCalculate: onCalculate, onCheck: onCheck, onAnalyse: onAnalyse, onMiew: onMiew, disabledButtons: disabledButtons, hiddenButtons: hiddenButtons, shortcuts: shortcuts, indigoVerification: indigoVerification, isCollapsed: width < collapseLimit }), _jsx(SystemControls, { onHistoryClick: () => {\r\n                    console.log('History button clicked'); // @TODO Implement handler when History log is ready\r\n                }, onSettingsOpen: onSettingsOpen, onFullscreen: onFullscreen, onHelp: onHelp, onAboutOpen: onAbout, disabledButtons: disabledButtons, hiddenButtons: hiddenButtons }), _jsx(Divider, {}), !hiddenButtons.includes('zoom-list') && (_jsx(ZoomControls, { currentZoom: currentZoom || 1, onZoomIn: onZoomIn, onZoomOut: onZoomOut, onZoom: onZoom, shortcuts: shortcuts, disabledButtons: disabledButtons, hiddenButtons: hiddenButtons }))] }));\r\n};\r\n//# sourceMappingURL=TopToolbar.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/node_modules/@emotion/styled/types/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/hooks/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/toolbars/TopToolbar/FileControls.tsx","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/toolbars/TopToolbar/ClipboardControls.tsx","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/toolbars/TopToolbar/UndoRedo.tsx","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/toolbars/TopToolbar/ZoomControls.tsx","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/toolbars/TopToolbar/SystemControls.tsx","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/toolbars/TopToolbar/IconButton.tsx","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/toolbars/TopToolbar/ExternalFuncControls.tsx","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/toolbars/TopToolbar/Divider.tsx"],"map":"{\"version\":3,\"file\":\"TopToolbar.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../src/script/ui/views/toolbars/TopToolbar/TopToolbar.tsx\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/script/ui/views/toolbars/TopToolbar/TopToolbar.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\n/// <reference types=\"react\" />\r\ndeclare type VoidFunction = () => void;\r\nexport interface PanelProps {\r\n    className: string;\r\n    disabledButtons: string[];\r\n    indigoVerification: boolean;\r\n    hiddenButtons: string[];\r\n    shortcuts: {\r\n        [key in string]: string;\r\n    };\r\n    onClear: VoidFunction;\r\n    onFileOpen: VoidFunction;\r\n    onSave: VoidFunction;\r\n    onUndo: VoidFunction;\r\n    onRedo: VoidFunction;\r\n    onCopy: VoidFunction;\r\n    onCopyMol: VoidFunction;\r\n    onCopyKet: VoidFunction;\r\n    onCopyImage: VoidFunction;\r\n    onCut: VoidFunction;\r\n    onPaste: VoidFunction;\r\n    currentZoom: number | undefined;\r\n    onZoom: (zoom: number) => void;\r\n    onZoomIn: VoidFunction;\r\n    onZoomOut: VoidFunction;\r\n    onSettingsOpen: VoidFunction;\r\n    onLayout: VoidFunction;\r\n    onClean: VoidFunction;\r\n    onAromatize: VoidFunction;\r\n    onDearomatize: VoidFunction;\r\n    onCalculate: VoidFunction;\r\n    onCheck: VoidFunction;\r\n    onAnalyse: VoidFunction;\r\n    onMiew: VoidFunction;\r\n    onFullscreen: VoidFunction;\r\n    onAbout: VoidFunction;\r\n    onHelp: VoidFunction;\r\n}\r\nexport declare const TopToolbar: ({ className, disabledButtons, indigoVerification, hiddenButtons, shortcuts, onClear, onFileOpen, onSave, onUndo, onRedo, onCopy, onCopyMol, onCopyKet, onCopyImage, onCut, onPaste, currentZoom, onZoom, onZoomIn, onZoomOut, onSettingsOpen, onLayout, onClean, onAromatize, onDearomatize, onCalculate, onCheck, onAnalyse, onMiew, onFullscreen, onAbout, onHelp }: PanelProps) => JSX.Element;\r\nexport {};\r\n"}}
