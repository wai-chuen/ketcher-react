{"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport Icon from 'src/script/ui/component/view/icon';\r\nimport styles from './OpenOptions.module.less';\r\nimport { FileDrop } from './FileDrop';\r\nconst ICON_NAMES = {\r\n    PASTE: 'open-window-paste-icon',\r\n    FILE: 'open-window-upload-icon',\r\n    IMAGE: 'image-frame'\r\n};\r\nexport const OpenOptions = ({ selectClipboard, fileLoadHandler, imageLoadHandler, isRecognizeDisabled, errorHandler }) => {\r\n    return (_jsxs(\"div\", { className: styles.optionsContainer, children: [_jsxs(\"div\", { onClick: selectClipboard, className: styles.dropContainer, children: [_jsx(\"div\", { className: styles.dropIconWrapper, children: _jsx(Icon, { name: ICON_NAMES.PASTE }) }), _jsx(\"div\", { className: styles.textLabelWrapper }), _jsx(\"div\", { className: styles.buttonLabelWrapper, children: _jsx(\"p\", { className: styles.buttonLabel, children: \"Paste from clipboard\" }) })] }), _jsx(FileDrop, { onDropAccepted: fileLoadHandler, onDropRejected: (e) => errorHandler(`Unable to accept file(s). ${e}`), buttonLabel: \"Open from file\", textLabel: \"or drag file here\", iconName: ICON_NAMES.FILE }), _jsx(FileDrop, { accept: \"image/*\", disabled: isRecognizeDisabled, disabledText: \"Image Recognition service is not available\", onDropAccepted: imageLoadHandler, onDropRejected: () => errorHandler('Unable to accept file(s). Make sure you upload 1 image.'), buttonLabel: \"Open from image\", textLabel: \"or drag file here\", iconName: ICON_NAMES.IMAGE })] }));\r\n};\r\n//# sourceMappingURL=OpenOptions.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/node_modules/@types/react/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/component/view/icon.jsx","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/modal/components/document/Open/components/FileDrop.tsx"],"map":"{\"version\":3,\"file\":\"OpenOptions.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../../../../src/script/ui/views/modal/components/document/Open/components/OpenOptions.tsx\"],\"names\":[],\"mappings\":\";AAkBA,OAAO,IAAI,MAAM,mCAAmC,CAAA;AACpD,OAAO,MAAM,MAAM,2BAA2B,CAAA;AAC9C,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAA;AAErC,MAAM,UAAU,GAAG;IACjB,KAAK,EAAE,wBAAwB;IAC/B,IAAI,EAAE,yBAAyB;IAC/B,KAAK,EAAE,aAAa;CACrB,CAAA;AAUD,MAAM,CAAC,MAAM,WAAW,GAAyB,CAAC,EAChD,eAAe,EACf,eAAe,EACf,gBAAgB,EAChB,mBAAmB,EACnB,YAAY,EACb,EAAE,EAAE;IACH,OAAO,CACL,eAAK,SAAS,EAAE,MAAM,CAAC,gBAAgB,aACrC,eAAK,OAAO,EAAE,eAAe,EAAE,SAAS,EAAE,MAAM,CAAC,aAAa,aAC5D,cAAK,SAAS,EAAE,MAAM,CAAC,eAAe,YACpC,KAAC,IAAI,IAAC,IAAI,EAAE,UAAU,CAAC,KAAK,GAAI,GAC5B,EACN,cAAK,SAAS,EAAE,MAAM,CAAC,gBAAgB,GAEjC,EACN,cAAK,SAAS,EAAE,MAAM,CAAC,kBAAkB,YACvC,YAAG,SAAS,EAAE,MAAM,CAAC,WAAW,qCAA0B,GACtD,IACF,EAEN,KAAC,QAAQ,IACP,cAAc,EAAE,eAAe,EAC/B,cAAc,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,YAAY,CAAC,6BAA6B,CAAC,EAAE,CAAC,EACrE,WAAW,EAAC,gBAAgB,EAC5B,SAAS,EAAC,mBAAmB,EAC7B,QAAQ,EAAE,UAAU,CAAC,IAAI,GACzB,EAEF,KAAC,QAAQ,IACP,MAAM,EAAC,SAAS,EAChB,QAAQ,EAAE,mBAAmB,EAC7B,YAAY,EAAC,4CAA4C,EACzD,cAAc,EAAE,gBAAgB,EAChC,cAAc,EAAE,GAAG,EAAE,CACnB,YAAY,CACV,yDAAyD,CAC1D,EAEH,WAAW,EAAC,iBAAiB,EAC7B,SAAS,EAAC,mBAAmB,EAC7B,QAAQ,EAAE,UAAU,CAAC,KAAK,GAC1B,IACE,CACP,CAAA;AACH,CAAC,CAAA\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/script/ui/views/modal/components/document/Open/components/OpenOptions.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { FC } from 'react';\r\nexport declare type OpenOptionsProps = {\r\n    selectClipboard: () => void;\r\n    errorHandler: (err: string) => void;\r\n    fileLoadHandler: (files: File[]) => void;\r\n    imageLoadHandler: (files: File[]) => void;\r\n    isRecognizeDisabled: boolean;\r\n};\r\nexport declare const OpenOptions: FC<OpenOptionsProps>;\r\n"}}
