{"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\n/****************************************************************************\r\n * Copyright 2022 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { HorizontalBoxWithLines, VerticalBoxWithLines } from './BoxWithLines';\r\nimport { GenGroup } from './GenGroup';\r\nimport { Generics } from 'ketcher-core';\r\nimport classes from './GenericGroups.module.less';\r\nimport { groupNames } from './';\r\nconst getGenericsGroupsMap = (tree) => {\r\n    let newGroups = {};\r\n    for (const groupName of Object.keys(tree)) {\r\n        newGroups[groupName] = { ...tree[groupName] };\r\n        if (newGroups[groupName]?.subGroups) {\r\n            newGroups = {\r\n                ...newGroups,\r\n                ...getGenericsGroupsMap(newGroups[groupName].subGroups)\r\n            };\r\n        }\r\n    }\r\n    return newGroups;\r\n};\r\nconst renderGenGroupComponent = (group, selected, onAtomSelect) => (_jsx(GenGroup, { group: groupsMap[group], selected: selected, onAtomSelect: onAtomSelect }));\r\nconst groupsMap = getGenericsGroupsMap(Generics);\r\nfunction GenericGroups({ selected, onAtomSelect }) {\r\n    return (_jsxs(\"div\", { className: classes.genericGroups, children: [_jsxs(\"div\", { className: classes.topGroupsContainer, children: [renderGenGroupComponent(groupNames.atomsGen, selected, onAtomSelect), renderGenGroupComponent(groupNames.specialNodes, selected, onAtomSelect)] }), renderGenGroupComponent(groupNames.groupGen, selected, onAtomSelect), _jsx(HorizontalBoxWithLines, {}), _jsxs(\"div\", { className: classes.groupGenerics, children: [_jsxs(\"div\", { children: [renderGenGroupComponent(groupNames.groupAcyclic, selected, onAtomSelect), _jsxs(\"div\", { className: classes.subgroupContainer, children: [_jsx(VerticalBoxWithLines, {}), _jsxs(\"div\", { children: [renderGenGroupComponent(groupNames.acyclicCarbo, selected, onAtomSelect), renderGenGroupComponent(groupNames.acyclicHetero, selected, onAtomSelect)] })] })] }), _jsxs(\"div\", { children: [renderGenGroupComponent(groupNames.groupCyclic, selected, onAtomSelect), _jsxs(\"div\", { className: classes.subgroupContainer, children: [_jsx(VerticalBoxWithLines, {}), _jsxs(\"div\", { children: [renderGenGroupComponent(groupNames.cyclicCarbo, selected, onAtomSelect), renderGenGroupComponent(groupNames.cyclicHetero, selected, onAtomSelect)] })] })] })] })] }));\r\n}\r\nexport default GenericGroups;\r\n//# sourceMappingURL=GenericGroups.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/modal/components/ExtendedTable/components/GenericGroups/BoxWithLines.tsx","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/modal/components/ExtendedTable/components/GenericGroups/GenGroup.tsx","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/dist/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/modal/components/ExtendedTable/components/GenericGroups/index.ts"],"map":"{\"version\":3,\"file\":\"GenericGroups.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../../../../src/script/ui/views/modal/components/ExtendedTable/components/GenericGroups/GenericGroups.tsx\"],\"names\":[],\"mappings\":\";AAAA;;;;;;;;;;;;;;6EAc6E;AAE7E,OAAO,EAAE,sBAAsB,EAAE,oBAAoB,EAAE,MAAM,gBAAgB,CAAA;AAE7E,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAA;AACrC,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAA;AACvC,OAAO,OAAO,MAAM,6BAA6B,CAAA;AACjD,OAAO,EAAE,UAAU,EAAE,MAAM,IAAI,CAAA;AAO/B,MAAM,oBAAoB,GAAG,CAAC,IAAI,EAAE,EAAE;IACpC,IAAI,SAAS,GAAG,EAAE,CAAA;IAClB,KAAK,MAAM,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;QACzC,SAAS,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,CAAA;QAC7C,IAAI,SAAS,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE;YACnC,SAAS,GAAG;gBACV,GAAG,SAAS;gBACZ,GAAG,oBAAoB,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC;aACxD,CAAA;SACF;KACF;IACD,OAAO,SAAS,CAAA;AAClB,CAAC,CAAA;AAED,MAAM,uBAAuB,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,CAAC,CACjE,KAAC,QAAQ,IACP,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EACvB,QAAQ,EAAE,QAAQ,EAClB,YAAY,EAAE,YAAY,GAC1B,CACH,CAAA;AAED,MAAM,SAAS,GAAG,oBAAoB,CAAC,QAAQ,CAAC,CAAA;AAEhD,SAAS,aAAa,CAAC,EAAE,QAAQ,EAAE,YAAY,EAAsB;IACnE,OAAO,CACL,eAAK,SAAS,EAAE,OAAO,CAAC,aAAa,aACnC,eAAK,SAAS,EAAE,OAAO,CAAC,kBAAkB,aACvC,uBAAuB,CAAC,UAAU,CAAC,QAAQ,EAAE,QAAQ,EAAE,YAAY,CAAC,EACpE,uBAAuB,CACtB,UAAU,CAAC,YAAY,EACvB,QAAQ,EACR,YAAY,CACb,IACG,EACL,uBAAuB,CAAC,UAAU,CAAC,QAAQ,EAAE,QAAQ,EAAE,YAAY,CAAC,EACrE,KAAC,sBAAsB,KAAG,EAC1B,eAAK,SAAS,EAAE,OAAO,CAAC,aAAa,aACnC,0BACG,uBAAuB,CACtB,UAAU,CAAC,YAAY,EACvB,QAAQ,EACR,YAAY,CACb,EACD,eAAK,SAAS,EAAE,OAAO,CAAC,iBAAiB,aACvC,KAAC,oBAAoB,KAAG,EACxB,0BACG,uBAAuB,CACtB,UAAU,CAAC,YAAY,EACvB,QAAQ,EACR,YAAY,CACb,EACA,uBAAuB,CACtB,UAAU,CAAC,aAAa,EACxB,QAAQ,EACR,YAAY,CACb,IACG,IACF,IACF,EACN,0BACG,uBAAuB,CACtB,UAAU,CAAC,WAAW,EACtB,QAAQ,EACR,YAAY,CACb,EACD,eAAK,SAAS,EAAE,OAAO,CAAC,iBAAiB,aACvC,KAAC,oBAAoB,KAAG,EACxB,0BACG,uBAAuB,CACtB,UAAU,CAAC,WAAW,EACtB,QAAQ,EACR,YAAY,CACb,EACA,uBAAuB,CACtB,UAAU,CAAC,YAAY,EACvB,QAAQ,EACR,YAAY,CACb,IACG,IACF,IACF,IACF,IACF,CACP,CAAA;AACH,CAAC;AAED,eAAe,aAAa,CAAA\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/script/ui/views/modal/components/ExtendedTable/components/GenericGroups/GenericGroups.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2022 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\n/// <reference types=\"react\" />\r\ndeclare type GenericGroupsProps = {\r\n    selected: (label: string) => boolean;\r\n    onAtomSelect: (label: string, activateImmediately: boolean) => void;\r\n};\r\ndeclare function GenericGroups({ selected, onAtomSelect }: GenericGroupsProps): JSX.Element;\r\nexport default GenericGroups;\r\n"}}
