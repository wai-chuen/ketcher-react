{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\n// todo: remove - ?? should we? it's in use\r\nfunction createApi(structServiceProvider, defaultOptions) {\r\n    const structService = structServiceProvider.createStructService(defaultOptions);\r\n    const info = structService.info();\r\n    return Object.assign(info, {\r\n        info: structService.info.bind(structService),\r\n        convert: structService.convert.bind(structService),\r\n        layout: structService.layout.bind(structService),\r\n        clean: structService.clean.bind(structService),\r\n        aromatize: structService.aromatize.bind(structService),\r\n        dearomatize: structService.dearomatize.bind(structService),\r\n        calculateCip: structService.calculateCip.bind(structService),\r\n        automap: structService.automap.bind(structService),\r\n        check: structService.check.bind(structService),\r\n        calculate: structService.calculate.bind(structService),\r\n        recognize: structService.recognize.bind(structService),\r\n        generateImageAsBase64: structService.generateImageAsBase64.bind(structService),\r\n        generateInchIKey: structService.generateInchIKey.bind(structService)\r\n    });\r\n}\r\nexport default createApi;\r\n//# sourceMappingURL=api.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"api.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/script/api.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;6EAc6E;AAW7E,2CAA2C;AAC3C,SAAS,SAAS,CAChB,qBAA4C,EAC5C,cAAoC;IAEpC,MAAM,aAAa,GACjB,qBAAqB,CAAC,mBAAmB,CAAC,cAAc,CAAC,CAAA;IAC3D,MAAM,IAAI,GAAG,aAAa,CAAC,IAAI,EAAE,CAAA;IAEjC,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE;QACzB,IAAI,EAAE,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;QAC5C,OAAO,EAAE,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC;QAClD,MAAM,EAAE,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;QAChD,KAAK,EAAE,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC;QAC9C,SAAS,EAAE,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC;QACtD,WAAW,EAAE,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC;QAC1D,YAAY,EAAE,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC;QAC5D,OAAO,EAAE,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC;QAClD,KAAK,EAAE,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC;QAC9C,SAAS,EAAE,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC;QACtD,SAAS,EAAE,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC;QACtD,qBAAqB,EACnB,aAAa,CAAC,qBAAqB,CAAC,IAAI,CAAC,aAAa,CAAC;QACzD,gBAAgB,EAAE,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC;KACrE,CAAC,CAAA;AACJ,CAAC;AAED,eAAe,SAAS,CAAA\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/script/api.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { InfoResult, StructService, StructServiceOptions, StructServiceProvider } from 'ketcher-core';\r\ndeclare type Api = StructService & Promise<InfoResult>;\r\ndeclare function createApi(structServiceProvider: StructServiceProvider, defaultOptions: StructServiceOptions): Api;\r\nexport default createApi;\r\n"}}
