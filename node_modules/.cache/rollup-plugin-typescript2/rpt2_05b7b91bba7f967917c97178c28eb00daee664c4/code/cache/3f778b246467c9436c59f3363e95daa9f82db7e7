{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { fromItemsFuse, fromPaste, fromTemplateOnAtom, getHoverToFuse, getItemsToFuse, SGroup, Vec2 } from 'ketcher-core';\r\nimport { dropAndMerge } from './helper/dropAndMerge';\r\nimport { getGroupIdsFromItemArrays } from './helper/getGroupIdsFromItems';\r\nimport { getMergeItems } from './helper/getMergeItems';\r\nimport utils from '../shared/utils';\r\nclass PasteTool {\r\n    editor;\r\n    struct;\r\n    action;\r\n    templateAction;\r\n    dragCtx;\r\n    findItems;\r\n    mergeItems;\r\n    isSingleContractedGroup;\r\n    constructor(editor, struct) {\r\n        this.editor = editor;\r\n        this.editor.selection(null);\r\n        this.struct = struct;\r\n        this.isSingleContractedGroup =\r\n            struct.isSingleGroup() && !struct.functionalGroups.get(0)?.isExpanded;\r\n        const rnd = this.editor.render;\r\n        const { clientHeight, clientWidth } = rnd.clientArea;\r\n        const point = this.editor.lastEvent\r\n            ? rnd.page2obj(this.editor.lastEvent)\r\n            : rnd.page2obj({\r\n                pageX: clientWidth / 2,\r\n                pageY: clientHeight / 2\r\n            });\r\n        const [action, pasteItems] = fromPaste(rnd.ctab, this.struct, point);\r\n        this.action = action;\r\n        this.editor.update(this.action, true);\r\n        this.findItems = ['functionalGroups'];\r\n        this.mergeItems = getItemsToFuse(this.editor, pasteItems);\r\n        this.editor.hover(getHoverToFuse(this.mergeItems), this);\r\n    }\r\n    mousedown(event) {\r\n        if (!this.isSingleContractedGroup ||\r\n            SGroup.isSaltOrSolvent(this.struct.sgroups.get(0)?.data.name)) {\r\n            return;\r\n        }\r\n        if (this.action) {\r\n            // remove pasted group from canvas to find closest group correctly\r\n            this.action?.perform(this.editor.render.ctab);\r\n        }\r\n        const closestGroupItem = this.editor.findItem(event, ['functionalGroups']);\r\n        const closestGroup = this.editor.struct().sgroups.get(closestGroupItem?.id);\r\n        // not dropping on a group (tmp, should be removed when dealing with other entities)\r\n        if (!closestGroupItem || SGroup.isSaltOrSolvent(closestGroup?.data.name)) {\r\n            // recreate action and continue as usual\r\n            const [action] = fromPaste(this.editor.render.ctab, this.struct, this.editor.render.page2obj(event));\r\n            this.action = action;\r\n            return;\r\n        }\r\n        // remove action to prevent error when trying to \"perform\" it again in mousemove\r\n        this.action = null;\r\n        this.dragCtx = {\r\n            xy0: this.editor.render.page2obj(event),\r\n            item: closestGroupItem\r\n        };\r\n    }\r\n    mousemove(event) {\r\n        if (this.action) {\r\n            this.action?.perform(this.editor.render.ctab);\r\n        }\r\n        if (this.dragCtx) {\r\n            // template-like logic for group-on-group actions\r\n            let pos0 = null;\r\n            const pos1 = this.editor.render.page2obj(event);\r\n            const extraBond = true;\r\n            const targetGroup = this.editor.struct().sgroups.get(this.dragCtx.item.id);\r\n            const atomId = targetGroup?.getAttAtomId(this.editor.struct());\r\n            if (atomId !== undefined) {\r\n                const atom = this.editor.struct().atoms.get(atomId);\r\n                pos0 = atom?.pp;\r\n            }\r\n            // calc angle\r\n            let angle = utils.calcAngle(pos0, pos1);\r\n            if (!event.ctrlKey) {\r\n                angle = utils.fracAngle(angle, null);\r\n            }\r\n            const degrees = utils.degrees(angle);\r\n            // check if anything changed since last time\r\n            if (this.dragCtx.hasOwnProperty('angle') &&\r\n                this.dragCtx.angle === degrees)\r\n                return;\r\n            if (this.dragCtx.action) {\r\n                this.dragCtx.action.perform(this.editor.render.ctab);\r\n            }\r\n            this.dragCtx.angle = degrees;\r\n            const [action] = fromTemplateOnAtom(this.editor.render.ctab, prepareTemplateFromSingleGroup(this.struct), atomId, angle, extraBond);\r\n            this.dragCtx.action = action;\r\n            this.editor.update(this.dragCtx.action, true);\r\n        }\r\n        else {\r\n            // common paste logic\r\n            const [action, pasteItems] = fromPaste(this.editor.render.ctab, this.struct, this.editor.render.page2obj(event));\r\n            this.action = action;\r\n            this.editor.update(this.action, true);\r\n            this.mergeItems = getMergeItems(this.editor, pasteItems);\r\n            this.editor.hover(getHoverToFuse(this.mergeItems));\r\n        }\r\n    }\r\n    mouseup() {\r\n        const idsOfItemsMerged = this.mergeItems && {\r\n            ...(this.mergeItems.atoms && {\r\n                atoms: Array.from(this.mergeItems.atoms.values())\r\n            }),\r\n            ...(this.mergeItems.bonds && {\r\n                bonds: Array.from(this.mergeItems.bonds.values())\r\n            })\r\n        };\r\n        const groupsIdsInvolvedInMerge = getGroupIdsFromItemArrays(this.editor.struct(), idsOfItemsMerged);\r\n        if (groupsIdsInvolvedInMerge.length) {\r\n            this.editor.event.removeFG.dispatch({ fgIds: groupsIdsInvolvedInMerge });\r\n            return;\r\n        }\r\n        if (this.dragCtx) {\r\n            const dragCtx = this.dragCtx;\r\n            delete this.dragCtx;\r\n            dragCtx.action = dragCtx.action\r\n                ? fromItemsFuse(this.editor.render.ctab, dragCtx.mergeItems).mergeWith(dragCtx.action)\r\n                : fromItemsFuse(this.editor.render.ctab, dragCtx.mergeItems);\r\n            this.editor.hover(null);\r\n            this.editor.update(dragCtx.action);\r\n            this.editor.event.message.dispatch({ info: false });\r\n        }\r\n        else {\r\n            // need to delete action first, because editor.update calls this.cancel() and thus action revert 🤦‍♂️\r\n            const action = this.action;\r\n            delete this.action;\r\n            dropAndMerge(this.editor, this.mergeItems, action);\r\n        }\r\n    }\r\n    cancel() {\r\n        const rnd = this.editor.render;\r\n        this.editor.hover(null);\r\n        if (this.action) {\r\n            this.action.perform(rnd.ctab); // revert the action\r\n            delete this.action;\r\n            rnd.update();\r\n        }\r\n    }\r\n    mouseleave() {\r\n        this.cancel();\r\n    }\r\n}\r\n/** Adds position and angle info to the molecule, similar to Template tool native behavior */\r\nfunction prepareTemplateFromSingleGroup(molecule) {\r\n    const template = {};\r\n    const sgroup = molecule.sgroups.get(0);\r\n    const xy0 = new Vec2();\r\n    molecule.atoms.forEach((atom) => {\r\n        xy0.add_(atom.pp); // eslint-disable-line no-underscore-dangle\r\n    });\r\n    template.aid = sgroup?.getAttAtomId(molecule) || 0;\r\n    template.molecule = molecule;\r\n    template.xy0 = xy0.scaled(1 / (molecule.atoms.size || 1)); // template center\r\n    const atom = molecule.atoms.get(template.aid);\r\n    if (atom) {\r\n        template.angle0 = utils.calcAngle(atom.pp, template.xy0); // center tilt\r\n    }\r\n    return template;\r\n}\r\nexport default PasteTool;\r\n//# sourceMappingURL=paste.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/dist/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/editor/Editor.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/editor/tool/helper/dropAndMerge.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/editor/tool/helper/getGroupIdsFromItems.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/editor/tool/helper/getMergeItems.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/editor/shared/utils.js"],"map":"{\"version\":3,\"file\":\"paste.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/script/editor/tool/paste.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/script/editor/tool/paste.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { Struct } from 'ketcher-core';\r\nimport Editor from '../Editor';\r\ndeclare class PasteTool {\r\n    editor: Editor;\r\n    struct: Struct;\r\n    action: any;\r\n    templateAction: any;\r\n    dragCtx: any;\r\n    findItems: string[];\r\n    mergeItems: any;\r\n    isSingleContractedGroup: boolean;\r\n    constructor(editor: any, struct: any);\r\n    mousedown(event: any): void;\r\n    mousemove(event: any): void;\r\n    mouseup(): void;\r\n    cancel(): void;\r\n    mouseleave(): void;\r\n}\r\nexport default PasteTool;\r\n"}}
