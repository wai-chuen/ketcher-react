{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { RGroup, fromRGroupAttrs, fromRGroupFragment, fromUpdateIfThen, FunctionalGroup } from 'ketcher-core';\r\nclass RGroupFragmentTool {\r\n    editor;\r\n    constructor(editor) {\r\n        // TODO: check if it's a fragments already\r\n        editor.selection(null);\r\n        this.editor = editor;\r\n    }\r\n    mousemove(event) {\r\n        this.editor.hover(this.editor.findItem(event, ['frags', 'rgroups']), null, event);\r\n    }\r\n    click(event) {\r\n        const struct = this.editor.render.ctab;\r\n        const molecule = struct.molecule;\r\n        const functionalGroups = molecule.functionalGroups;\r\n        const editor = this.editor;\r\n        const ci = editor.findItem(event, ['frags', 'rgroups']);\r\n        const ce = editor.findItem(event, ['atoms', 'bonds']);\r\n        const atomResult = [];\r\n        const bondResult = [];\r\n        const result = [];\r\n        if (ce && functionalGroups && ce.map === 'atoms') {\r\n            const atomId = FunctionalGroup.atomsInFunctionalGroup(functionalGroups, ce.id);\r\n            if (atomId !== null) {\r\n                atomResult.push(atomId);\r\n            }\r\n        }\r\n        if (ce && functionalGroups && ce.map === 'bonds') {\r\n            const bondId = FunctionalGroup.bondsInFunctionalGroup(molecule, functionalGroups, ce.id);\r\n            if (bondId !== null) {\r\n                bondResult.push(bondId);\r\n            }\r\n        }\r\n        if (atomResult.length > 0) {\r\n            for (const id of atomResult) {\r\n                const fgId = FunctionalGroup.findFunctionalGroupByAtom(functionalGroups, id);\r\n                if (fgId !== null && !result.includes(fgId)) {\r\n                    result.push(fgId);\r\n                }\r\n            }\r\n            this.editor.event.removeFG.dispatch({ fgIds: result });\r\n            return;\r\n        }\r\n        else if (bondResult.length > 0) {\r\n            for (const id of bondResult) {\r\n                const fgId = FunctionalGroup.findFunctionalGroupByBond(molecule, functionalGroups, id);\r\n                if (fgId !== null && !result.includes(fgId)) {\r\n                    result.push(fgId);\r\n                }\r\n            }\r\n            this.editor.event.removeFG.dispatch({ fgIds: result });\r\n            return;\r\n        }\r\n        if (!ci) {\r\n            return true;\r\n        }\r\n        this.editor.hover(null);\r\n        const label = ci.map === 'rgroups'\r\n            ? ci.id\r\n            : RGroup.findRGroupByFragment(molecule.rgroups, ci.id);\r\n        const rg = Object.assign({ label }, ci.map === 'frags' ? { fragId: ci.id } : molecule.rgroups.get(ci.id));\r\n        const res = editor.event.rgroupEdit.dispatch(rg);\r\n        Promise.resolve(res)\r\n            .then((newRg) => {\r\n            let action;\r\n            if (ci.map !== 'rgroups') {\r\n                const rgidOld = RGroup.findRGroupByFragment(struct.molecule.rgroups, ci.id);\r\n                action = fromRGroupFragment(struct, newRg.label, ci.id).mergeWith(fromUpdateIfThen(struct, newRg.label, rgidOld));\r\n            }\r\n            else {\r\n                action = fromRGroupAttrs(struct, ci.id, newRg);\r\n            }\r\n            editor.update(action);\r\n        })\r\n            .catch(() => null); // w/o changes\r\n        return true;\r\n    }\r\n    cancel() {\r\n        this.editor.hover(null);\r\n    }\r\n}\r\nexport default RGroupFragmentTool;\r\n//# sourceMappingURL=rgroupfragment.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/dist/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/editor/Editor.ts"],"map":"{\"version\":3,\"file\":\"rgroupfragment.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/script/editor/tool/rgroupfragment.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/script/editor/tool/rgroupfragment.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport Editor from '../Editor';\r\ndeclare class RGroupFragmentTool {\r\n    editor: Editor;\r\n    constructor(editor: any);\r\n    mousemove(event: any): void;\r\n    click(event: any): true | undefined;\r\n    cancel(): void;\r\n}\r\nexport default RGroupFragmentTool;\r\n"}}
