{"code":"import { useCallback } from 'react';\r\nimport { useAppContext } from 'src/hooks';\r\nimport { mapAtomIdsToAtoms } from 'src/script/editor/tool/select';\r\nimport { updateSelectedAtoms } from 'src/script/ui/state/modal/atoms';\r\nconst useAtomEdit = () => {\r\n    const { getKetcherInstance } = useAppContext();\r\n    const handler = useCallback(async ({ props }) => {\r\n        const editor = getKetcherInstance().editor;\r\n        const molecule = editor.render.ctab;\r\n        const atomIds = props?.atomIds || [];\r\n        const atoms = mapAtomIdsToAtoms(atomIds, molecule);\r\n        const newAtom = editor.event.elementEdit.dispatch(atoms);\r\n        updateSelectedAtoms({\r\n            atoms: atomIds,\r\n            changeAtomPromise: newAtom,\r\n            editor\r\n        });\r\n    }, [getKetcherInstance]);\r\n    const disabled = useCallback(({ props }) => {\r\n        const atomIds = props?.atomIds;\r\n        if (Array.isArray(atomIds) && atomIds.length !== 0) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }, []);\r\n    return [handler, disabled];\r\n};\r\nexport default useAtomEdit;\r\n//# sourceMappingURL=useAtomEdit.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/node_modules/@types/react/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/hooks/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/editor/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/editor/tool/select.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/state/modal/atoms.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/components/ContextMenu/contextMenu.types.ts"],"map":"{\"version\":3,\"file\":\"useAtomEdit.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../../src/script/ui/views/components/ContextMenu/hooks/useAtomEdit.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,OAAO,CAAA;AACnC,OAAO,EAAE,aAAa,EAAE,MAAM,WAAW,CAAA;AAEzC,OAAO,EAAE,iBAAiB,EAAE,MAAM,+BAA+B,CAAA;AACjE,OAAO,EAAE,mBAAmB,EAAE,MAAM,iCAAiC,CAAA;AAGrE,MAAM,WAAW,GAAG,GAAG,EAAE;IACvB,MAAM,EAAE,kBAAkB,EAAE,GAAG,aAAa,EAAE,CAAA;IAE9C,MAAM,OAAO,GAAG,WAAW,CACzB,KAAK,EAAE,EAAE,KAAK,EAAmB,EAAE,EAAE;QACnC,MAAM,MAAM,GAAG,kBAAkB,EAAE,CAAC,MAAgB,CAAA;QACpD,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAA;QACnC,MAAM,OAAO,GAAG,KAAK,EAAE,OAAO,IAAI,EAAE,CAAA;QACpC,MAAM,KAAK,GAAG,iBAAiB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAA;QAElD,MAAM,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA;QAExD,mBAAmB,CAAC;YAClB,KAAK,EAAE,OAAO;YACd,iBAAiB,EAAE,OAAO;YAC1B,MAAM;SACP,CAAC,CAAA;IACJ,CAAC,EACD,CAAC,kBAAkB,CAAC,CACrB,CAAA;IAED,MAAM,QAAQ,GAAG,WAAW,CAAC,CAAC,EAAE,KAAK,EAAmB,EAAE,EAAE;QAC1D,MAAM,OAAO,GAAG,KAAK,EAAE,OAAO,CAAA;QAC9B,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YAClD,OAAO,KAAK,CAAA;SACb;QAED,OAAO,IAAI,CAAA;IACb,CAAC,EAAE,EAAE,CAAC,CAAA;IAEN,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAU,CAAA;AACrC,CAAC,CAAA;AAED,eAAe,WAAW,CAAA\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/script/ui/views/components/ContextMenu/hooks/useAtomEdit.d.ts","writeByteOrderMark":false,"text":"import { ItemEventParams } from '../contextMenu.types';\r\ndeclare const useAtomEdit: () => readonly [({ props }: ItemEventParams) => Promise<void>, ({ props }: ItemEventParams) => boolean];\r\nexport default useAtomEdit;\r\n"}}
