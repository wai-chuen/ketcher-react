{"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\r\n/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport MuiSelect from '@mui/material/Select';\r\nimport Divider from '@mui/material/Divider';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport styles from './Select.module.less';\r\nimport Icon from '../../view/icon';\r\nconst ChevronIcon = ({ className }) => (_jsx(Icon, { name: \"chevron\", className: clsx(className, styles.chevronIcon) }));\r\nconst Select = ({ className, value, onChange, multiple = false, disabled, options }) => {\r\n    const [currentValue, setCurrentValue] = useState();\r\n    useEffect(() => {\r\n        let option;\r\n        if (options) {\r\n            option = options.find((option) => option.value === value);\r\n        }\r\n        return setCurrentValue(option);\r\n    }, [options, value]);\r\n    const handleChange = (event) => {\r\n        onChange(event.target.value);\r\n    };\r\n    return (_jsx(MuiSelect, { className: clsx(styles.selectContainer, className), value: currentValue?.value ?? '', onChange: handleChange, multiple: multiple, disabled: disabled, MenuProps: { className: styles.dropdownList }, IconComponent: ChevronIcon, children: options &&\r\n            options.map((option) => {\r\n                const isDivider = typeof option?.value === 'string'\r\n                    ? option.value.includes('Divider')\r\n                    : false;\r\n                return isDivider ? (_jsx(Divider, { className: styles.listDivider }, option.value)) : (_jsx(MenuItem, { value: option.value, disableRipple: true, children: option.label }, option.value));\r\n            }) }));\r\n};\r\nexport default Select;\r\n//# sourceMappingURL=Select.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/node_modules/@mui/material/Select/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/node_modules/@mui/material/Divider/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/node_modules/@mui/material/MenuItem/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/node_modules/@types/react/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/node_modules/clsx/clsx.d.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/component/view/icon.jsx"],"map":"{\"version\":3,\"file\":\"Select.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../src/script/ui/component/form/Select/Select.tsx\"],\"names\":[],\"mappings\":\";AAAA;;;;;;;;;;;;;;6EAc6E;AAE7E,OAAO,SAAgC,MAAM,sBAAsB,CAAA;AACnE,OAAO,OAAO,MAAM,uBAAuB,CAAA;AAC3C,OAAO,QAAQ,MAAM,wBAAwB,CAAA;AAC7C,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAA;AAC3C,OAAO,IAAI,MAAM,MAAM,CAAA;AACvB,OAAO,MAAM,MAAM,sBAAsB,CAAA;AAEzC,OAAO,IAAI,MAAM,iBAAiB,CAAA;AAgBlC,MAAM,WAAW,GAAG,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC,CACrC,KAAC,IAAI,IAAC,IAAI,EAAC,SAAS,EAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,WAAW,CAAC,GAAI,CACxE,CAAA;AAED,MAAM,MAAM,GAAG,CAAC,EACd,SAAS,EACT,KAAK,EACL,QAAQ,EACR,QAAQ,GAAG,KAAK,EAChB,QAAQ,EACR,OAAO,EACD,EAAE,EAAE;IACV,MAAM,CAAC,YAAY,EAAE,eAAe,CAAC,GAAG,QAAQ,EAAU,CAAA;IAE1D,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,MAAM,CAAA;QACV,IAAI,OAAO,EAAE;YACX,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,KAAK,KAAK,CAAC,CAAA;SAC1D;QACD,OAAO,eAAe,CAAC,MAAM,CAAC,CAAA;IAChC,CAAC,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAA;IAEpB,MAAM,YAAY,GAAG,CAAC,KAAwB,EAAE,EAAE;QAChD,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;IAC9B,CAAC,CAAA;IAED,OAAO,CACL,KAAC,SAAS,IACR,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,SAAS,CAAC,EAClD,KAAK,EAAE,YAAY,EAAE,KAAK,IAAI,EAAE,EAChC,QAAQ,EAAE,YAAY,EACtB,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,QAAQ,EAClB,SAAS,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,YAAY,EAAE,EAC7C,aAAa,EAAE,WAAW,YAEzB,OAAO;YACN,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE;gBACrB,MAAM,SAAS,GACb,OAAO,MAAM,EAAE,KAAK,KAAK,QAAQ;oBAC/B,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC;oBAClC,CAAC,CAAC,KAAK,CAAA;gBAEX,OAAO,SAAS,CAAC,CAAC,CAAC,CACjB,KAAC,OAAO,IAAC,SAAS,EAAE,MAAM,CAAC,WAAW,IAAO,MAAM,CAAC,KAAK,CAAI,CAC9D,CAAC,CAAC,CAAC,CACF,KAAC,QAAQ,IACP,KAAK,EAAE,MAAM,CAAC,KAAK,EAEnB,aAAa,EAAE,IAAI,YAElB,MAAM,CAAC,KAAK,IAHR,MAAM,CAAC,KAAK,CAIR,CACZ,CAAA;YACH,CAAC,CAAC,GACM,CACb,CAAA;AACH,CAAC,CAAA;AAED,eAAe,MAAM,CAAA\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/script/ui/component/form/Select/Select.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\n/// <reference types=\"react\" />\r\nexport interface Option {\r\n    value: string;\r\n    label: string;\r\n}\r\ninterface Props {\r\n    options: Array<Option>;\r\n    onChange: (value: string) => void;\r\n    className?: string;\r\n    value?: string;\r\n    multiple?: boolean;\r\n    disabled?: boolean;\r\n}\r\ndeclare const Select: ({ className, value, onChange, multiple, disabled, options }: Props) => JSX.Element;\r\nexport default Select;\r\n"}}
