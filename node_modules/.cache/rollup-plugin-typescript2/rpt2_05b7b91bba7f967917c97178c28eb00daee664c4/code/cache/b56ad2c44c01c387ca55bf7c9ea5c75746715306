{"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\n/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport Form, { Field } from '../../../component/form/form/form';\r\nimport { StereoLabel } from 'ketcher-core';\r\nimport { Dialog } from '../../../views/components';\r\nimport classes from './enhancedStereo.module.less';\r\nimport { connect } from 'react-redux';\r\nimport { range } from 'lodash';\r\nconst EnhancedStereo = (props) => {\r\n    const { struct, formState, init, ...rest } = props;\r\n    const { result, valid } = formState;\r\n    const stereoLabels = findStereLabels(struct, Array.from(struct.atoms.keys()));\r\n    const maxAnd = maxOfAnds(stereoLabels);\r\n    const maxOr = maxOfOrs(stereoLabels);\r\n    const enhancedStereoSchema = {\r\n        title: 'Enhanced Stereo',\r\n        type: 'object',\r\n        properties: {\r\n            type: {\r\n                type: 'string'\r\n            },\r\n            andNumber: {\r\n                type: 'integer'\r\n            },\r\n            orNumber: {\r\n                type: 'integer'\r\n            }\r\n        }\r\n    };\r\n    return (_jsx(Dialog, { title: \"Enhanced Stereochemistry\", className: classes.enhancedStereo, params: rest, result: () => result, valid: () => valid, withDivider: true, buttons: ['Cancel', 'OK'], buttonsNameMap: { OK: 'Apply' }, children: _jsx(Form, { schema: enhancedStereoSchema, init: init, ...formState, children: _jsxs(\"fieldset\", { children: [_jsxs(\"label\", { children: [_jsx(Field, { name: \"type\", labelPos: false, type: \"radio\", value: StereoLabel.Abs, checked: result.type === StereoLabel.Abs }), \"ABS\"] }), maxAnd !== 0 && (_jsxs(\"label\", { children: [_jsx(Field, { name: \"type\", labelPos: false, type: \"radio\", value: StereoLabel.And, checked: result.type === StereoLabel.And }), \"Add to AND\", _jsx(Field, { name: \"andNumber\", schema: range(1, maxAnd + 1), type: \"text\", className: classes.labelGroupSelect }), \"Group\"] })), maxOr !== 0 && (_jsxs(\"label\", { children: [_jsx(Field, { name: \"type\", labelPos: false, type: \"radio\", value: StereoLabel.Or, checked: result.type === StereoLabel.Or }), \"Add to OR\", _jsx(Field, { name: \"orNumber\", schema: range(1, maxOr + 1), type: \"text\", className: classes.labelGroupSelect }), \"Group\"] })), _jsxs(\"label\", { children: [_jsx(Field, { name: \"type\", labelPos: false, type: \"radio\", value: `${StereoLabel.And}${maxAnd + 1}`, checked: result.type === `${StereoLabel.And}${maxAnd + 1}` }), \"Create new AND Group\"] }), _jsxs(\"label\", { children: [_jsx(Field, { name: \"type\", labelPos: false, type: \"radio\", value: `${StereoLabel.Or}${maxOr + 1}`, checked: result.type === `${StereoLabel.Or}${maxOr + 1}` }), \"Create new OR Group\"] })] }) }) }));\r\n};\r\n// TODO: Move the function below to Struct class\r\nfunction findStereLabels(struct, aids) {\r\n    const stereoIds = aids.filter((aid) => struct.atoms.get(aid).stereoLabel !== null);\r\n    return stereoIds.map((aid) => struct.atoms.get(aid).stereoLabel);\r\n}\r\nfunction maxOfAnds(stereLabels) {\r\n    const numbers = stereLabels.map((label) => {\r\n        return label.match(/&/) ? +label.match(/\\d+/)?.join() : 0;\r\n    });\r\n    return Math.max(...numbers);\r\n}\r\nfunction maxOfOrs(stereLabels) {\r\n    const numbers = stereLabels.map((label) => {\r\n        return label.match(/or/) ? +label.match(/\\d+/)?.join() : 0;\r\n    });\r\n    return Math.max(...numbers);\r\n}\r\nexport default connect((state) => ({\r\n    formState: state.modal.form || { result: {}, valid: false },\r\n    struct: state.editor.struct()\r\n}))(EnhancedStereo);\r\n//# sourceMappingURL=enhancedStereo.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/component/form/form/form.jsx","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/dist/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/components/index.ts","/usr/local/google/home/waich/workspace/ketcher/node_modules/@types/react/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/node_modules/@types/react-redux/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/node_modules/@types/lodash/index.d.ts"],"map":"{\"version\":3,\"file\":\"enhancedStereo.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../src/script/ui/dialog/toolbox/enhancedStereo/enhancedStereo.tsx\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/script/ui/dialog/toolbox/enhancedStereo/enhancedStereo.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { StereoLabel, Struct } from 'ketcher-core';\r\nimport { FC } from 'react';\r\ninterface EnhancedStereoResult {\r\n    andNumber: number;\r\n    orNumber: number;\r\n    type: StereoLabel;\r\n}\r\ninterface EnhancedStereoFormState {\r\n    result: EnhancedStereoResult;\r\n    valid: boolean;\r\n    errors: string[];\r\n}\r\ninterface EnhancedStereoProps {\r\n    className: string;\r\n    init: EnhancedStereoResult & {\r\n        init?: true;\r\n    };\r\n    formState: EnhancedStereoFormState;\r\n    struct: Struct;\r\n}\r\ninterface EnhancedStereoCallProps {\r\n    onCancel: () => void;\r\n    onOk: (res: any) => void;\r\n}\r\ndeclare type Props = EnhancedStereoProps & EnhancedStereoCallProps;\r\ndeclare const _default: import(\"react-redux\").ConnectedComponent<FC<Props>, import(\"react-redux\").Omit<EnhancedStereoProps & EnhancedStereoCallProps, \"formState\" | \"struct\">>;\r\nexport default _default;\r\n"}}
