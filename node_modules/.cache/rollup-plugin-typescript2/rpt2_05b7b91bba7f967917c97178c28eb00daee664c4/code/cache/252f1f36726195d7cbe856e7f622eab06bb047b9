{"code":"import { jsx as _jsx, Fragment as _Fragment } from \"react/jsx-runtime\";\r\nimport { ActionButton } from '../../../ActionButton';\r\nimport action from '../../../../../../action';\r\nimport classes from './GroupedMultiTool.module.less';\r\nconst GroupedMultiTool = (props) => {\r\n    const { groups, options, status, disableableButtons, indigoVerification, onAction } = props;\r\n    if (!groups) {\r\n        return null;\r\n    }\r\n    return (_jsx(_Fragment, { children: groups.map((descriptor) => (_jsx(\"div\", { className: classes.group, children: options\r\n                .slice(descriptor.start, descriptor.end)\r\n                .map((toolbarItem) => {\r\n                const currentStatus = status[toolbarItem.id];\r\n                return (_jsx(ActionButton, { name: toolbarItem.id, action: action[toolbarItem.id], status: currentStatus, selected: !!currentStatus?.selected, disableableButtons: disableableButtons, indigoVerification: indigoVerification, onAction: onAction }, toolbarItem.id));\r\n            }) }, descriptor.start))) }));\r\n};\r\nexport { GroupedMultiTool };\r\n//# sourceMappingURL=GroupedMultiTool.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/toolbars/ToolbarGroupItem/ToolbarMultiToolItem/variants/variants.types.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/toolbars/ToolbarGroupItem/ActionButton/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/action/index.js"],"map":"{\"version\":3,\"file\":\"GroupedMultiTool.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../../../../src/script/ui/views/toolbars/ToolbarGroupItem/ToolbarMultiToolItem/variants/GroupedMultiTool/GroupedMultiTool.tsx\"],\"names\":[],\"mappings\":\";AAkBA,OAAO,EAAE,YAAY,EAAqB,MAAM,uBAAuB,CAAA;AACvE,OAAO,MAAM,MAAM,0BAA0B,CAAA;AAC7C,OAAO,OAAO,MAAM,gCAAgC,CAAA;AAOpD,MAAM,gBAAgB,GAAG,CAAC,KAAY,EAAE,EAAE;IACxC,MAAM,EACJ,MAAM,EACN,OAAO,EACP,MAAM,EACN,kBAAkB,EAClB,kBAAkB,EAClB,QAAQ,EACT,GAAG,KAAK,CAAA;IAET,IAAI,CAAC,MAAM,EAAE;QACX,OAAO,IAAI,CAAA;KACZ;IAED,OAAO,CACL,4BACG,MAAM,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,CAC1B,cAAK,SAAS,EAAE,OAAO,CAAC,KAAK,YAC1B,OAAO;iBACL,KAAK,CAAC,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,GAAG,CAAC;iBACvC,GAAG,CAAC,CAAC,WAAW,EAAE,EAAE;gBACnB,MAAM,aAAa,GAAG,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAA;gBAC5C,OAAO,CACL,KAAC,YAAY,IAEX,IAAI,EAAE,WAAW,CAAC,EAAE,EACpB,MAAM,EAAE,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,EAC9B,MAAM,EAAE,aAA4C,EACpD,QAAQ,EAAE,CAAC,CAAC,aAAa,EAAE,QAAQ,EACnC,kBAAkB,EAAE,kBAAkB,EACtC,kBAAkB,EAAE,kBAAkB,EACtC,QAAQ,EAAE,QAAQ,IAPb,WAAW,CAAC,EAAE,CAQnB,CACH,CAAA;YACH,CAAC,CAAC,IAjB8B,UAAU,CAAC,KAAK,CAkB9C,CACP,CAAC,GACD,CACJ,CAAA;AACH,CAAC,CAAA;AAGD,OAAO,EAAE,gBAAgB,EAAE,CAAA\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/script/ui/views/toolbars/ToolbarGroupItem/ToolbarMultiToolItem/variants/GroupedMultiTool/GroupedMultiTool.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\n/// <reference types=\"react\" />\r\nimport { MultiToolCallProps, MultiToolProps } from '../variants.types';\r\ndeclare type GroupedMultiToolProps = MultiToolProps;\r\ndeclare type GroupedMultiToolCallProps = MultiToolCallProps;\r\ndeclare type Props = GroupedMultiToolProps & GroupedMultiToolCallProps;\r\ndeclare const GroupedMultiTool: (props: Props) => JSX.Element | null;\r\nexport type { GroupedMultiToolProps, GroupedMultiToolCallProps };\r\nexport { GroupedMultiTool };\r\n"}}
