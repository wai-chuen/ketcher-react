{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport _ from 'lodash';\r\nimport { escapeRegExp, filter as _filter, flow, reduce } from 'lodash/fp';\r\nconst GREEK_SIMBOLS = {\r\n    Alpha: 'A',\r\n    alpha: 'α',\r\n    Beta: 'B',\r\n    beta: 'β',\r\n    Gamma: 'Г',\r\n    gamma: 'γ'\r\n};\r\nconst greekRe = new RegExp('\\\\b' + Object.keys(GREEK_SIMBOLS).join('\\\\b|\\\\b') + '\\\\b', 'g');\r\nexport function greekify(str) {\r\n    return str.replace(greekRe, (sym) => GREEK_SIMBOLS[sym]);\r\n}\r\nexport function filterLib(lib, filter) {\r\n    const trimmedFilter = filter.trim();\r\n    const re = new RegExp(escapeRegExp(greekify(trimmedFilter)), 'i');\r\n    return flow(_filter((item) => !trimmedFilter ||\r\n        re.test(greekify(item.struct.name)) ||\r\n        re.test(greekify(item.props.group))), reduce((res, item) => {\r\n        if (!res[item.props.group])\r\n            res[item.props.group] = [item];\r\n        else\r\n            res[item.props.group].push(item);\r\n        return res;\r\n    }, {}))(lib);\r\n}\r\nexport function filterFGLib(lib, filter) {\r\n    const trimmedFilter = filter.trim();\r\n    const re = new RegExp(escapeRegExp(greekify(trimmedFilter)), 'i');\r\n    const searchFunction = (item) => {\r\n        const fields = [\r\n            item.struct.name,\r\n            item.props.abbreviation,\r\n            item.props.name\r\n        ].filter(Boolean);\r\n        return fields.some((field) => re.test(greekify(field)));\r\n    };\r\n    return flow(_filter((item) => !trimmedFilter || searchFunction(item)), reduce((res, item) => {\r\n        if (!res[item.props.group])\r\n            res[item.props.group] = [item];\r\n        else\r\n            res[item.props.group].push(item);\r\n        return res;\r\n    }, {}))(lib);\r\n}\r\nexport const getSelectOptionsFromSchema = (schema) => {\r\n    return schema.enum.reduce((options, value, index) => {\r\n        options.push({\r\n            value,\r\n            label: schema?.enumNames?.[index] ?? value\r\n        });\r\n        return options;\r\n    }, []);\r\n};\r\n/**\r\n * Creates a function, which is not called if the current argument is the same as the last one\r\n * @param func function to be debounced\r\n * @param delay delay in ms\r\n * @param skipArguments indexes in arguments array to skip for comparison\r\n * @returns debounced function, which is not called with previous argument\r\n */\r\nexport function memoizedDebounce(func, delay = 0, skipArguments = []) {\r\n    let lastArgs;\r\n    const debouncedFunction = _.debounce(func, delay);\r\n    const getArgumentsToCompare = (args) => args?.filter((_, index) => !skipArguments.includes(index)) || [];\r\n    return function (...args) {\r\n        const lastArgsToCompare = getArgumentsToCompare(lastArgs);\r\n        const argsToCompare = getArgumentsToCompare(args);\r\n        if (lastArgs && _.isEqual(argsToCompare, lastArgsToCompare)) {\r\n            return;\r\n        }\r\n        lastArgs = args;\r\n        debouncedFunction(...args);\r\n    };\r\n}\r\nexport { RenderStruct } from './renderStruct';\r\nexport { fileOpener } from './fileOpener';\r\n//# sourceMappingURL=index.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/node_modules/@types/lodash/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/node_modules/@types/lodash/fp.d.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/component/form/Select/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/utils/renderStruct.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/utils/fileOpener.js"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/script/ui/utils/index.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/script/ui/utils/index.d.ts","writeByteOrderMark":false,"text":"import { Option } from '../component/form/Select';\r\nexport declare function greekify(str: string): string;\r\nexport declare function filterLib(lib: any, filter: string): {};\r\nexport declare function filterFGLib(lib: any, filter: any): {};\r\nexport declare const getSelectOptionsFromSchema: (schema: any) => Array<Option>;\r\n/**\r\n * Creates a function, which is not called if the current argument is the same as the last one\r\n * @param func function to be debounced\r\n * @param delay delay in ms\r\n * @param skipArguments indexes in arguments array to skip for comparison\r\n * @returns debounced function, which is not called with previous argument\r\n */\r\nexport declare function memoizedDebounce(func: any, delay?: number, skipArguments?: number[]): (...args: any[]) => void;\r\nexport { RenderStruct } from './renderStruct';\r\nexport { fileOpener } from './fileOpener';\r\n"}}
