{"code":"import { findStereoAtoms } from 'ketcher-core';\r\nimport { useCallback, useRef } from 'react';\r\nimport { useAppContext } from 'src/hooks';\r\nimport EnhancedStereoTool from 'src/script/editor/tool/enhanced-stereo';\r\nimport { noOperation } from '../utils';\r\nconst useAtomStereo = () => {\r\n    const { getKetcherInstance } = useAppContext();\r\n    const stereoAtomIdsRef = useRef();\r\n    const handler = useCallback(async ({ props }) => {\r\n        if (!props || !stereoAtomIdsRef.current) {\r\n            return;\r\n        }\r\n        const editor = getKetcherInstance().editor;\r\n        try {\r\n            const action = await EnhancedStereoTool.changeAtomsStereoAction(editor, stereoAtomIdsRef.current);\r\n            action && editor.update(action);\r\n        }\r\n        catch (error) {\r\n            noOperation();\r\n        }\r\n    }, [getKetcherInstance]);\r\n    const disabled = useCallback(({ props }) => {\r\n        const editor = getKetcherInstance().editor;\r\n        const stereoAtomIds = findStereoAtoms(editor.struct(), props?.atomIds);\r\n        stereoAtomIdsRef.current = stereoAtomIds;\r\n        if (Array.isArray(stereoAtomIds) && stereoAtomIds.length !== 0) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }, [getKetcherInstance]);\r\n    return [handler, disabled];\r\n};\r\nexport default useAtomStereo;\r\n//# sourceMappingURL=useAtomStereo.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/dist/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/node_modules/@types/react/index.d.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/hooks/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/editor/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/editor/tool/enhanced-stereo.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/components/ContextMenu/contextMenu.types.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/src/script/ui/views/components/ContextMenu/utils.ts"],"map":"{\"version\":3,\"file\":\"useAtomStereo.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../../src/script/ui/views/components/ContextMenu/hooks/useAtomStereo.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,cAAc,CAAA;AAC9C,OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,OAAO,CAAA;AAC3C,OAAO,EAAE,aAAa,EAAE,MAAM,WAAW,CAAA;AAEzC,OAAO,kBAAkB,MAAM,wCAAwC,CAAA;AAEvE,OAAO,EAAE,WAAW,EAAE,MAAM,UAAU,CAAA;AAEtC,MAAM,aAAa,GAAG,GAAG,EAAE;IACzB,MAAM,EAAE,kBAAkB,EAAE,GAAG,aAAa,EAAE,CAAA;IAC9C,MAAM,gBAAgB,GAAG,MAAM,EAAwB,CAAA;IAEvD,MAAM,OAAO,GAAG,WAAW,CACzB,KAAK,EAAE,EAAE,KAAK,EAAmB,EAAE,EAAE;QACnC,IAAI,CAAC,KAAK,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE;YACvC,OAAM;SACP;QAED,MAAM,MAAM,GAAG,kBAAkB,EAAE,CAAC,MAAgB,CAAA;QAEpD,IAAI;YACF,MAAM,MAAM,GAAG,MAAM,kBAAkB,CAAC,uBAAuB,CAC7D,MAAM,EACN,gBAAgB,CAAC,OAAO,CACzB,CAAA;YAED,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;SAChC;QAAC,OAAO,KAAK,EAAE;YACd,WAAW,EAAE,CAAA;SACd;IACH,CAAC,EACD,CAAC,kBAAkB,CAAC,CACrB,CAAA;IAED,MAAM,QAAQ,GAAG,WAAW,CAC1B,CAAC,EAAE,KAAK,EAAmB,EAAE,EAAE;QAC7B,MAAM,MAAM,GAAG,kBAAkB,EAAE,CAAC,MAAgB,CAAA;QACpD,MAAM,aAAa,GAAyB,eAAe,CACzD,MAAM,CAAC,MAAM,EAAE,EACf,KAAK,EAAE,OAAO,CACf,CAAA;QACD,gBAAgB,CAAC,OAAO,GAAG,aAAa,CAAA;QAExC,IAAI,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YAC9D,OAAO,KAAK,CAAA;SACb;QAED,OAAO,IAAI,CAAA;IACb,CAAC,EACD,CAAC,kBAAkB,CAAC,CACrB,CAAA;IAED,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAU,CAAA;AACrC,CAAC,CAAA;AAED,eAAe,aAAa,CAAA\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/script/ui/views/components/ContextMenu/hooks/useAtomStereo.d.ts","writeByteOrderMark":false,"text":"import { ItemEventParams } from '../contextMenu.types';\r\ndeclare const useAtomStereo: () => readonly [({ props }: ItemEventParams) => Promise<void>, ({ props }: ItemEventParams) => boolean];\r\nexport default useAtomStereo;\r\n"}}
